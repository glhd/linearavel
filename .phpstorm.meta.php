<?php

namespace PHPSTORM_META;

expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingApiKeysQueryRequest::get(), 0, '*', 'edges.cursor', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.label', 'nodes.archivedAt', 'pageInfo.hasPreviousPage', 'pageInfo.hasNextPage', 'pageInfo.startCursor', 'pageInfo.endCursor');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingApplicationInfoQueryRequest::get(), 0, '*', 'id', 'clientId', 'name', 'developer', 'developerUrl', 'description', 'imageUrl');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingApplicationInfoByIdsQueryRequest::get(), 0, '*', 'id', 'clientId', 'name', 'developer', 'developerUrl', 'description', 'imageUrl');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingApplicationInfoWithMembershipsByIdsQueryRequest::get(), 0, '*', 'name', 'scope', 'appId', 'clientId', 'webhooksEnabled', 'totalMembers', 'memberships.userId', 'memberships.createdAt', 'imageUrl');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingApplicationWithAuthorizationQueryRequest::get(), 0, '*', 'id', 'clientId', 'name', 'developer', 'developerUrl', 'isAuthorized', 'createdByLinear', 'webhooksEnabled', 'description', 'imageUrl', 'approvalErrorCode');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingAuthorizedApplicationsQueryRequest::get(), 0, '*', 'name', 'scope', 'appId', 'clientId', 'webhooksEnabled', 'imageUrl');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingWorkspaceAuthorizedApplicationsQueryRequest::get(), 0, '*', 'name', 'scope', 'appId', 'clientId', 'webhooksEnabled', 'totalMembers', 'memberships.userId', 'memberships.createdAt', 'imageUrl');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingAttachmentsQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.title', 'nodes.url', 'nodes.metadata', 'nodes.groupBySource', 'nodes.archivedAt', 'nodes.subtitle', 'nodes.source', 'nodes.sourceType');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingAttachmentQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'title', 'url', 'metadata', 'groupBySource', 'archivedAt', 'subtitle', 'source', 'sourceType');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingAttachmentsForURLQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.title', 'nodes.url', 'nodes.metadata', 'nodes.groupBySource', 'nodes.archivedAt', 'nodes.subtitle', 'nodes.source', 'nodes.sourceType');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingAttachmentIssueQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'number', 'title', 'priority', 'boardOrder', 'sortOrder', 'labelIds', 'previousIdentifiers', 'priorityLabel', 'identifier', 'url', 'branchName', 'customerTicketCount', 'archivedAt', 'estimate', 'startedAt', 'completedAt', 'startedTriageAt', 'triagedAt', 'canceledAt', 'autoClosedAt', 'autoArchivedAt', 'dueDate', 'slaStartedAt', 'slaBreachesAt', 'trashed', 'snoozedUntilAt', 'subIssueSortOrder', 'integrationSourceType', 'description', 'descriptionData', 'descriptionState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingAttachmentSourcesQueryRequest::get(), 0, '*', 'sources');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingAuditEntryTypesQueryRequest::get(), 0, '*', 'type', 'description');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingAuditEntriesQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.type', 'nodes.archivedAt', 'nodes.actorId', 'nodes.ip', 'nodes.countryCode', 'nodes.metadata', 'nodes.requestInformation');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingAvailableUsersQueryRequest::get(), 0, '*', 'id', 'email', 'users.id', 'users.name', 'users.displayName', 'users.email', 'users.active', 'users.userAccountId', 'users.avatarUrl', 'allowDomainAccess', 'availableOrganizations.id', 'availableOrganizations.name', 'availableOrganizations.urlKey', 'availableOrganizations.previousUrlKeys', 'availableOrganizations.releaseChannel', 'availableOrganizations.samlEnabled', 'availableOrganizations.allowedAuthServices', 'availableOrganizations.scimEnabled', 'availableOrganizations.serviceId', 'availableOrganizations.userCount', 'availableOrganizations.logoUrl', 'availableOrganizations.deletionRequestedAt', 'availableOrganizations.samlSettings', 'lockedOrganizations.id', 'lockedOrganizations.name', 'lockedOrganizations.urlKey', 'lockedOrganizations.previousUrlKeys', 'lockedOrganizations.releaseChannel', 'lockedOrganizations.samlEnabled', 'lockedOrganizations.allowedAuthServices', 'lockedOrganizations.scimEnabled', 'lockedOrganizations.serviceId', 'lockedOrganizations.userCount', 'lockedOrganizations.logoUrl', 'lockedOrganizations.deletionRequestedAt', 'lockedOrganizations.samlSettings', 'lastUsedOrganizationId', 'token');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingAuthenticationSessionsQueryRequest::get(), 0, '*', 'id', 'type', 'countryCodes', 'createdAt', 'updatedAt', 'name', 'isCurrentSession', 'ip', 'locationCountry', 'locationCountryCode', 'locationCity', 'userAgent', 'browserType', 'lastActiveAt', 'location', 'operatingSystem', 'client');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingSsoUrlFromEmailQueryRequest::get(), 0, '*', 'success', 'samlSsoUrl');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingCommentsQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.body', 'nodes.bodyData', 'nodes.reactionData', 'nodes.url', 'nodes.archivedAt', 'nodes.resolvedAt', 'nodes.editedAt', 'nodes.quotedText', 'nodes.summaryText');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingCommentQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'body', 'bodyData', 'reactionData', 'url', 'archivedAt', 'resolvedAt', 'editedAt', 'quotedText', 'summaryText');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingCustomViewsQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.name', 'nodes.filters', 'nodes.filterData', 'nodes.shared', 'nodes.modelName', 'nodes.archivedAt', 'nodes.description', 'nodes.icon', 'nodes.color', 'nodes.projectFilterData');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingCustomViewQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'name', 'filters', 'filterData', 'shared', 'modelName', 'archivedAt', 'description', 'icon', 'color', 'projectFilterData');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingCustomViewDetailsSuggestionQueryRequest::get(), 0, '*', 'name', 'description', 'icon');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingCustomViewHasSubscribersQueryRequest::get(), 0, '*', 'hasSubscribers');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingCyclesQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.number', 'nodes.startsAt', 'nodes.endsAt', 'nodes.issueCountHistory', 'nodes.completedIssueCountHistory', 'nodes.scopeHistory', 'nodes.completedScopeHistory', 'nodes.inProgressScopeHistory', 'nodes.progress', 'nodes.archivedAt', 'nodes.name', 'nodes.description', 'nodes.completedAt', 'nodes.autoArchivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingCycleQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'number', 'startsAt', 'endsAt', 'issueCountHistory', 'completedIssueCountHistory', 'scopeHistory', 'completedScopeHistory', 'inProgressScopeHistory', 'progress', 'archivedAt', 'name', 'description', 'completedAt', 'autoArchivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingDocumentContentHistoryQueryRequest::get(), 0, '*', 'success', 'history.id', 'history.createdAt', 'history.contentDataSnapshotAt', 'history.contentData', 'history.actorIds');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingDocumentsQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.title', 'nodes.slugId', 'nodes.sortOrder', 'nodes.archivedAt', 'nodes.icon', 'nodes.color', 'nodes.content', 'nodes.contentState', 'nodes.contentData');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingDocumentQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'title', 'slugId', 'sortOrder', 'archivedAt', 'icon', 'color', 'content', 'contentState', 'contentData');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingEmojisQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.name', 'nodes.url', 'nodes.source', 'nodes.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingEmojiQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'name', 'url', 'source', 'archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingExternalUsersQueryRequest::get(), 0, '*', 'edges.cursor', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.name', 'nodes.displayName', 'nodes.organization.id', 'nodes.organization.createdAt', 'nodes.organization.updatedAt', 'nodes.organization.name', 'nodes.organization.urlKey', 'nodes.organization.periodUploadVolume', 'nodes.organization.gitLinkbackMessagesEnabled', 'nodes.organization.gitPublicLinkbackMessagesEnabled', 'nodes.organization.roadmapEnabled', 'nodes.organization.projectUpdatesReminderFrequency', 'nodes.organization.projectUpdateRemindersDay', 'nodes.organization.projectUpdateRemindersHour', 'nodes.organization.fiscalYearStartMonth', 'nodes.organization.samlEnabled', 'nodes.organization.scimEnabled', 'nodes.organization.allowedAuthServices', 'nodes.organization.previousUrlKeys', 'nodes.organization.releaseChannel', 'nodes.organization.slaDayCount', 'nodes.organization.users', 'nodes.organization.teams', 'nodes.organization.integrations', 'nodes.organization.userCount', 'nodes.organization.createdIssueCount', 'nodes.organization.templates', 'nodes.organization.labels', 'nodes.organization.archivedAt', 'nodes.organization.logoUrl', 'nodes.organization.gitBranchFormat', 'nodes.organization.samlSettings', 'nodes.organization.deletionRequestedAt', 'nodes.organization.trialEndsAt', 'nodes.organization.allowMembersToInvite', 'nodes.organization.subscription', 'nodes.archivedAt', 'nodes.email', 'nodes.avatarUrl', 'nodes.lastSeen', 'pageInfo.hasPreviousPage', 'pageInfo.hasNextPage', 'pageInfo.startCursor', 'pageInfo.endCursor');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingExternalUserQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'name', 'displayName', 'organization.id', 'organization.createdAt', 'organization.updatedAt', 'organization.name', 'organization.urlKey', 'organization.periodUploadVolume', 'organization.gitLinkbackMessagesEnabled', 'organization.gitPublicLinkbackMessagesEnabled', 'organization.roadmapEnabled', 'organization.projectUpdatesReminderFrequency', 'organization.projectUpdateRemindersDay', 'organization.projectUpdateRemindersHour', 'organization.fiscalYearStartMonth', 'organization.samlEnabled', 'organization.scimEnabled', 'organization.allowedAuthServices', 'organization.previousUrlKeys', 'organization.releaseChannel', 'organization.slaDayCount', 'organization.userCount', 'organization.createdIssueCount', 'organization.archivedAt', 'organization.logoUrl', 'organization.gitBranchFormat', 'organization.samlSettings', 'organization.deletionRequestedAt', 'organization.trialEndsAt', 'organization.allowMembersToInvite', 'archivedAt', 'email', 'avatarUrl', 'lastSeen');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingInitiativeToProjectsQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.sortOrder', 'nodes.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingInitiativeToProjectQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'sortOrder', 'archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingInitiativesQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.name', 'nodes.slugId', 'nodes.sortOrder', 'nodes.archivedAt', 'nodes.description', 'nodes.color', 'nodes.targetDate', 'nodes.targetDateResolution');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingInitiativeQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'name', 'slugId', 'sortOrder', 'archivedAt', 'description', 'color', 'targetDate', 'targetDateResolution');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingFavoritesQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.type', 'nodes.sortOrder', 'nodes.archivedAt', 'nodes.folderName', 'nodes.projectTab', 'nodes.predefinedViewType');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingFavoriteQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'type', 'sortOrder', 'archivedAt', 'folderName', 'projectTab', 'predefinedViewType');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationsQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.service', 'nodes.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'service', 'archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationHasScopesQueryRequest::get(), 0, '*', 'hasAllScopes', 'missingScopes');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingProjectUpdatesQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.body', 'nodes.health', 'nodes.isDiffHidden', 'nodes.bodyData', 'nodes.url', 'nodes.archivedAt', 'nodes.editedAt', 'nodes.infoSnapshot', 'nodes.diff', 'nodes.diffMarkdown');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationsSettingsQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'archivedAt', 'slackIssueCreated', 'slackIssueNewComment', 'slackIssueStatusChangedDone', 'slackIssueStatusChangedAll', 'slackProjectUpdateCreated', 'slackProjectUpdateCreatedToTeam', 'slackProjectUpdateCreatedToWorkspace', 'slackIssueAddedToTriage', 'slackIssueSlaHighRisk', 'slackIssueSlaBreached');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationTemplatesQueryRequest::get(), 0, '*', 'edges.cursor', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.template.id', 'nodes.template.createdAt', 'nodes.template.updatedAt', 'nodes.template.type', 'nodes.template.name', 'nodes.template.templateData', 'nodes.template.archivedAt', 'nodes.template.description', 'nodes.template.organization', 'nodes.template.team', 'nodes.template.creator', 'nodes.template.lastUpdatedBy', 'nodes.integration.id', 'nodes.integration.createdAt', 'nodes.integration.updatedAt', 'nodes.integration.service', 'nodes.integration.organization', 'nodes.integration.creator', 'nodes.integration.archivedAt', 'nodes.integration.team', 'nodes.archivedAt', 'nodes.foreignEntityId', 'pageInfo.hasPreviousPage', 'pageInfo.hasNextPage', 'pageInfo.startCursor', 'pageInfo.endCursor');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationTemplateQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'template.id', 'template.createdAt', 'template.updatedAt', 'template.type', 'template.name', 'template.templateData', 'template.archivedAt', 'template.description', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt', 'archivedAt', 'foreignEntityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueImportFinishGithubOAuthQueryRequest::get(), 0, '*', 'token', 'organizations.id', 'organizations.login', 'organizations.isPersonal');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueImportCheckCSVQueryRequest::get(), 0, '*', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueLabelsQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.name', 'nodes.color', 'nodes.isGroup', 'nodes.archivedAt', 'nodes.description');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueLabelQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'name', 'color', 'isGroup', 'archivedAt', 'description');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueRelationsQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.type', 'nodes.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueRelationQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'type', 'archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssuesQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.number', 'nodes.title', 'nodes.priority', 'nodes.boardOrder', 'nodes.sortOrder', 'nodes.labelIds', 'nodes.previousIdentifiers', 'nodes.priorityLabel', 'nodes.identifier', 'nodes.url', 'nodes.branchName', 'nodes.customerTicketCount', 'nodes.archivedAt', 'nodes.estimate', 'nodes.startedAt', 'nodes.completedAt', 'nodes.startedTriageAt', 'nodes.triagedAt', 'nodes.canceledAt', 'nodes.autoClosedAt', 'nodes.autoArchivedAt', 'nodes.dueDate', 'nodes.slaStartedAt', 'nodes.slaBreachesAt', 'nodes.trashed', 'nodes.snoozedUntilAt', 'nodes.subIssueSortOrder', 'nodes.integrationSourceType', 'nodes.description', 'nodes.descriptionData', 'nodes.descriptionState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'number', 'title', 'priority', 'boardOrder', 'sortOrder', 'labelIds', 'previousIdentifiers', 'priorityLabel', 'identifier', 'url', 'branchName', 'customerTicketCount', 'archivedAt', 'estimate', 'startedAt', 'completedAt', 'startedTriageAt', 'triagedAt', 'canceledAt', 'autoClosedAt', 'autoArchivedAt', 'dueDate', 'slaStartedAt', 'slaBreachesAt', 'trashed', 'snoozedUntilAt', 'subIssueSortOrder', 'integrationSourceType', 'description', 'descriptionData', 'descriptionState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueSearchQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.number', 'nodes.title', 'nodes.priority', 'nodes.boardOrder', 'nodes.sortOrder', 'nodes.labelIds', 'nodes.previousIdentifiers', 'nodes.priorityLabel', 'nodes.identifier', 'nodes.url', 'nodes.branchName', 'nodes.customerTicketCount', 'nodes.archivedAt', 'nodes.estimate', 'nodes.startedAt', 'nodes.completedAt', 'nodes.startedTriageAt', 'nodes.triagedAt', 'nodes.canceledAt', 'nodes.autoClosedAt', 'nodes.autoArchivedAt', 'nodes.dueDate', 'nodes.slaStartedAt', 'nodes.slaBreachesAt', 'nodes.trashed', 'nodes.snoozedUntilAt', 'nodes.subIssueSortOrder', 'nodes.integrationSourceType', 'nodes.description', 'nodes.descriptionData', 'nodes.descriptionState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueVcsBranchSearchQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'number', 'title', 'priority', 'boardOrder', 'sortOrder', 'labelIds', 'previousIdentifiers', 'priorityLabel', 'identifier', 'url', 'branchName', 'customerTicketCount', 'archivedAt', 'estimate', 'startedAt', 'completedAt', 'startedTriageAt', 'triagedAt', 'canceledAt', 'autoClosedAt', 'autoArchivedAt', 'dueDate', 'slaStartedAt', 'slaBreachesAt', 'trashed', 'snoozedUntilAt', 'subIssueSortOrder', 'integrationSourceType', 'description', 'descriptionData', 'descriptionState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueFigmaFileKeySearchQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.number', 'nodes.title', 'nodes.priority', 'nodes.boardOrder', 'nodes.sortOrder', 'nodes.labelIds', 'nodes.previousIdentifiers', 'nodes.priorityLabel', 'nodes.identifier', 'nodes.url', 'nodes.branchName', 'nodes.customerTicketCount', 'nodes.archivedAt', 'nodes.estimate', 'nodes.startedAt', 'nodes.completedAt', 'nodes.startedTriageAt', 'nodes.triagedAt', 'nodes.canceledAt', 'nodes.autoClosedAt', 'nodes.autoArchivedAt', 'nodes.dueDate', 'nodes.slaStartedAt', 'nodes.slaBreachesAt', 'nodes.trashed', 'nodes.snoozedUntilAt', 'nodes.subIssueSortOrder', 'nodes.integrationSourceType', 'nodes.description', 'nodes.descriptionData', 'nodes.descriptionState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssuePriorityValuesQueryRequest::get(), 0, '*', 'priority', 'label');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueFilterSuggestionQueryRequest::get(), 0, '*', 'filter');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingNotificationsQueryRequest::get(), 0, '*', 'edges.node', 'edges.cursor', 'nodes', 'pageInfo.hasPreviousPage', 'pageInfo.hasNextPage', 'pageInfo.startCursor', 'pageInfo.endCursor');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingNotificationSubscriptionsQueryRequest::get(), 0, '*', 'edges.node', 'edges.cursor', 'nodes', 'pageInfo.hasPreviousPage', 'pageInfo.hasNextPage', 'pageInfo.startCursor', 'pageInfo.endCursor');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingOrganizationDomainClaimRequestQueryRequest::get(), 0, '*', 'verificationString');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingOrganizationInvitesQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.email', 'nodes.role', 'nodes.external', 'nodes.metadata', 'nodes.archivedAt', 'nodes.acceptedAt', 'nodes.expiresAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingOrganizationInviteQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'email', 'role', 'external', 'metadata', 'archivedAt', 'acceptedAt', 'expiresAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingOrganizationQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'name', 'urlKey', 'periodUploadVolume', 'gitLinkbackMessagesEnabled', 'gitPublicLinkbackMessagesEnabled', 'roadmapEnabled', 'projectUpdatesReminderFrequency', 'projectUpdateRemindersDay', 'projectUpdateRemindersHour', 'fiscalYearStartMonth', 'samlEnabled', 'scimEnabled', 'allowedAuthServices', 'previousUrlKeys', 'releaseChannel', 'slaDayCount', 'userCount', 'createdIssueCount', 'archivedAt', 'logoUrl', 'gitBranchFormat', 'samlSettings', 'deletionRequestedAt', 'trialEndsAt', 'allowMembersToInvite', 'subscription.id', 'subscription.createdAt', 'subscription.updatedAt', 'subscription.type', 'subscription.seats', 'subscription.archivedAt', 'subscription.seatsMinimum', 'subscription.seatsMaximum', 'subscription.collectionMethod', 'subscription.canceledAt', 'subscription.pendingChangeType', 'subscription.nextBillingAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingOrganizationExistsQueryRequest::get(), 0, '*', 'success', 'exists');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingArchivedTeamsQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'name', 'key', 'cyclesEnabled', 'cycleStartDay', 'cycleDuration', 'cycleCooldownTime', 'cycleIssueAutoAssignStarted', 'cycleIssueAutoAssignCompleted', 'cycleLockToActive', 'upcomingCycleCount', 'timezone', 'inviteHash', 'issueEstimationType', 'issueOrderingNoPriorityFirst', 'issueEstimationAllowZero', 'setIssueSortOrderOnStateChange', 'issueEstimationExtended', 'defaultIssueEstimate', 'triageEnabled', 'requirePriorityToLeaveTriage', 'private', 'groupIssueHistory', 'slackNewIssue', 'slackIssueComments', 'slackIssueStatuses', 'autoArchivePeriod', 'cycleCalenderUrl', 'issueCount', 'issueSortOrderDefaultToBottom', 'archivedAt', 'description', 'icon', 'color', 'defaultTemplateForMembersId', 'defaultTemplateForNonMembersId', 'autoClosePeriod', 'autoCloseStateId', 'joinByDefault');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingProjectLinksQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.url', 'nodes.label', 'nodes.sortOrder', 'nodes.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingProjectLinkQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'url', 'label', 'sortOrder', 'archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingProjectMilestonesQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.name', 'nodes.sortOrder', 'nodes.archivedAt', 'nodes.targetDate', 'nodes.description', 'nodes.descriptionData', 'nodes.descriptionState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingProjectMilestoneQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'name', 'project.id', 'project.createdAt', 'project.updatedAt', 'project.name', 'project.description', 'project.slugId', 'project.color', 'project.sortOrder', 'project.issueCountHistory', 'project.completedIssueCountHistory', 'project.scopeHistory', 'project.completedScopeHistory', 'project.inProgressScopeHistory', 'project.slackNewIssue', 'project.slackIssueComments', 'project.slackIssueStatuses', 'project.url', 'project.progress', 'project.scope', 'project.state', 'project.archivedAt', 'project.icon', 'project.projectUpdateRemindersPausedUntilAt', 'project.startDate', 'project.startDateResolution', 'project.targetDate', 'project.targetDateResolution', 'project.startedAt', 'project.pausedAt', 'project.completedAt', 'project.canceledAt', 'project.autoArchivedAt', 'project.trashed', 'project.content', 'project.contentState', 'sortOrder', 'archivedAt', 'targetDate', 'description', 'descriptionData', 'descriptionState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingProjectsQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.name', 'nodes.description', 'nodes.slugId', 'nodes.color', 'nodes.sortOrder', 'nodes.issueCountHistory', 'nodes.completedIssueCountHistory', 'nodes.scopeHistory', 'nodes.completedScopeHistory', 'nodes.inProgressScopeHistory', 'nodes.slackNewIssue', 'nodes.slackIssueComments', 'nodes.slackIssueStatuses', 'nodes.url', 'nodes.progress', 'nodes.scope', 'nodes.state', 'nodes.archivedAt', 'nodes.icon', 'nodes.projectUpdateRemindersPausedUntilAt', 'nodes.startDate', 'nodes.startDateResolution', 'nodes.targetDate', 'nodes.targetDateResolution', 'nodes.startedAt', 'nodes.pausedAt', 'nodes.completedAt', 'nodes.canceledAt', 'nodes.autoArchivedAt', 'nodes.trashed', 'nodes.content', 'nodes.contentState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingProjectQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'name', 'description', 'slugId', 'color', 'sortOrder', 'issueCountHistory', 'completedIssueCountHistory', 'scopeHistory', 'completedScopeHistory', 'inProgressScopeHistory', 'slackNewIssue', 'slackIssueComments', 'slackIssueStatuses', 'url', 'progress', 'scope', 'state', 'archivedAt', 'icon', 'projectUpdateRemindersPausedUntilAt', 'startDate', 'startDateResolution', 'targetDate', 'targetDateResolution', 'startedAt', 'pausedAt', 'completedAt', 'canceledAt', 'autoArchivedAt', 'trashed', 'content', 'contentState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingProjectFilterSuggestionQueryRequest::get(), 0, '*', 'filter');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingProjectUpdateInteractionsQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.readAt', 'nodes.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingProjectUpdateInteractionQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'user.id', 'user.createdAt', 'user.updatedAt', 'user.name', 'user.displayName', 'user.email', 'user.inviteHash', 'user.guest', 'user.active', 'user.url', 'user.createdIssueCount', 'user.isMe', 'user.admin', 'user.archivedAt', 'user.avatarUrl', 'user.disableReason', 'user.calendarHash', 'user.description', 'user.statusEmoji', 'user.statusLabel', 'user.statusUntilAt', 'user.timezone', 'user.lastSeen', 'projectUpdate.id', 'projectUpdate.createdAt', 'projectUpdate.updatedAt', 'projectUpdate.body', 'projectUpdate.health', 'projectUpdate.isDiffHidden', 'projectUpdate.bodyData', 'projectUpdate.url', 'projectUpdate.archivedAt', 'projectUpdate.editedAt', 'projectUpdate.infoSnapshot', 'projectUpdate.diff', 'projectUpdate.diffMarkdown', 'readAt', 'archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingProjectUpdateQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'body', 'health', 'isDiffHidden', 'bodyData', 'url', 'archivedAt', 'editedAt', 'infoSnapshot', 'diff', 'diffMarkdown');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingPushSubscriptionTestQueryRequest::get(), 0, '*', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingRateLimitStatusQueryRequest::get(), 0, '*', 'kind', 'limits.type', 'limits.requestedAmount', 'limits.allowedAmount', 'limits.period', 'limits.remainingAmount', 'limits.reset', 'identifier');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingRoadmapsQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.name', 'nodes.slugId', 'nodes.sortOrder', 'nodes.archivedAt', 'nodes.description', 'nodes.color');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingRoadmapQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'name', 'slugId', 'sortOrder', 'archivedAt', 'description', 'color');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingRoadmapToProjectsQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.sortOrder', 'nodes.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingRoadmapToProjectQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'project.id', 'project.createdAt', 'project.updatedAt', 'project.name', 'project.description', 'project.slugId', 'project.color', 'project.sortOrder', 'project.issueCountHistory', 'project.completedIssueCountHistory', 'project.scopeHistory', 'project.completedScopeHistory', 'project.inProgressScopeHistory', 'project.slackNewIssue', 'project.slackIssueComments', 'project.slackIssueStatuses', 'project.url', 'project.progress', 'project.scope', 'project.state', 'project.archivedAt', 'project.icon', 'project.projectUpdateRemindersPausedUntilAt', 'project.startDate', 'project.startDateResolution', 'project.targetDate', 'project.targetDateResolution', 'project.startedAt', 'project.pausedAt', 'project.completedAt', 'project.canceledAt', 'project.autoArchivedAt', 'project.trashed', 'project.content', 'project.contentState', 'roadmap.id', 'roadmap.createdAt', 'roadmap.updatedAt', 'roadmap.name', 'roadmap.slugId', 'roadmap.sortOrder', 'roadmap.archivedAt', 'roadmap.description', 'roadmap.color', 'sortOrder', 'archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingSearchDocumentsQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.title', 'nodes.slugId', 'nodes.sortOrder', 'nodes.metadata', 'nodes.archivedAt', 'nodes.icon', 'nodes.color', 'nodes.content', 'nodes.contentState', 'nodes.contentData', 'totalCount');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingSearchProjectsQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.name', 'nodes.description', 'nodes.slugId', 'nodes.color', 'nodes.sortOrder', 'nodes.issueCountHistory', 'nodes.completedIssueCountHistory', 'nodes.scopeHistory', 'nodes.completedScopeHistory', 'nodes.inProgressScopeHistory', 'nodes.slackNewIssue', 'nodes.slackIssueComments', 'nodes.slackIssueStatuses', 'nodes.url', 'nodes.progress', 'nodes.scope', 'nodes.state', 'nodes.metadata', 'nodes.archivedAt', 'nodes.icon', 'nodes.projectUpdateRemindersPausedUntilAt', 'nodes.startDate', 'nodes.startDateResolution', 'nodes.targetDate', 'nodes.targetDateResolution', 'nodes.startedAt', 'nodes.pausedAt', 'nodes.completedAt', 'nodes.canceledAt', 'nodes.autoArchivedAt', 'nodes.trashed', 'nodes.content', 'nodes.contentState', 'totalCount');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingSearchIssuesQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.number', 'nodes.title', 'nodes.priority', 'nodes.boardOrder', 'nodes.sortOrder', 'nodes.labelIds', 'nodes.previousIdentifiers', 'nodes.priorityLabel', 'nodes.identifier', 'nodes.url', 'nodes.branchName', 'nodes.customerTicketCount', 'nodes.metadata', 'nodes.archivedAt', 'nodes.estimate', 'nodes.startedAt', 'nodes.completedAt', 'nodes.startedTriageAt', 'nodes.triagedAt', 'nodes.canceledAt', 'nodes.autoClosedAt', 'nodes.autoArchivedAt', 'nodes.dueDate', 'nodes.slaStartedAt', 'nodes.slaBreachesAt', 'nodes.trashed', 'nodes.snoozedUntilAt', 'nodes.subIssueSortOrder', 'nodes.integrationSourceType', 'nodes.description', 'nodes.descriptionData', 'nodes.descriptionState', 'totalCount');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTeamMembershipsQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.sortOrder', 'nodes.archivedAt', 'nodes.owner');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTeamMembershipQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'sortOrder', 'archivedAt', 'owner');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTeamsQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.name', 'nodes.key', 'nodes.cyclesEnabled', 'nodes.cycleStartDay', 'nodes.cycleDuration', 'nodes.cycleCooldownTime', 'nodes.cycleIssueAutoAssignStarted', 'nodes.cycleIssueAutoAssignCompleted', 'nodes.cycleLockToActive', 'nodes.upcomingCycleCount', 'nodes.timezone', 'nodes.inviteHash', 'nodes.issueEstimationType', 'nodes.issueOrderingNoPriorityFirst', 'nodes.issueEstimationAllowZero', 'nodes.setIssueSortOrderOnStateChange', 'nodes.issueEstimationExtended', 'nodes.defaultIssueEstimate', 'nodes.triageEnabled', 'nodes.requirePriorityToLeaveTriage', 'nodes.private', 'nodes.groupIssueHistory', 'nodes.slackNewIssue', 'nodes.slackIssueComments', 'nodes.slackIssueStatuses', 'nodes.autoArchivePeriod', 'nodes.cycleCalenderUrl', 'nodes.issueCount', 'nodes.issueSortOrderDefaultToBottom', 'nodes.archivedAt', 'nodes.description', 'nodes.icon', 'nodes.color', 'nodes.defaultTemplateForMembersId', 'nodes.defaultTemplateForNonMembersId', 'nodes.autoClosePeriod', 'nodes.autoCloseStateId', 'nodes.joinByDefault');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingAdministrableTeamsQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.name', 'nodes.key', 'nodes.cyclesEnabled', 'nodes.cycleStartDay', 'nodes.cycleDuration', 'nodes.cycleCooldownTime', 'nodes.cycleIssueAutoAssignStarted', 'nodes.cycleIssueAutoAssignCompleted', 'nodes.cycleLockToActive', 'nodes.upcomingCycleCount', 'nodes.timezone', 'nodes.inviteHash', 'nodes.issueEstimationType', 'nodes.issueOrderingNoPriorityFirst', 'nodes.issueEstimationAllowZero', 'nodes.setIssueSortOrderOnStateChange', 'nodes.issueEstimationExtended', 'nodes.defaultIssueEstimate', 'nodes.triageEnabled', 'nodes.requirePriorityToLeaveTriage', 'nodes.private', 'nodes.groupIssueHistory', 'nodes.slackNewIssue', 'nodes.slackIssueComments', 'nodes.slackIssueStatuses', 'nodes.autoArchivePeriod', 'nodes.cycleCalenderUrl', 'nodes.issueCount', 'nodes.issueSortOrderDefaultToBottom', 'nodes.archivedAt', 'nodes.description', 'nodes.icon', 'nodes.color', 'nodes.defaultTemplateForMembersId', 'nodes.defaultTemplateForNonMembersId', 'nodes.autoClosePeriod', 'nodes.autoCloseStateId', 'nodes.joinByDefault');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTeamQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'name', 'key', 'cyclesEnabled', 'cycleStartDay', 'cycleDuration', 'cycleCooldownTime', 'cycleIssueAutoAssignStarted', 'cycleIssueAutoAssignCompleted', 'cycleLockToActive', 'upcomingCycleCount', 'timezone', 'inviteHash', 'issueEstimationType', 'issueOrderingNoPriorityFirst', 'issueEstimationAllowZero', 'setIssueSortOrderOnStateChange', 'issueEstimationExtended', 'defaultIssueEstimate', 'triageEnabled', 'requirePriorityToLeaveTriage', 'private', 'groupIssueHistory', 'slackNewIssue', 'slackIssueComments', 'slackIssueStatuses', 'autoArchivePeriod', 'cycleCalenderUrl', 'issueCount', 'issueSortOrderDefaultToBottom', 'archivedAt', 'description', 'icon', 'color', 'defaultTemplateForMembersId', 'defaultTemplateForNonMembersId', 'autoClosePeriod', 'autoCloseStateId', 'joinByDefault');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTemplatesQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'type', 'name', 'templateData', 'archivedAt', 'description');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTemplateQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'type', 'name', 'templateData', 'archivedAt', 'description');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTemplatesForIntegrationQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'type', 'name', 'templateData', 'archivedAt', 'description');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTimeSchedulesQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.name', 'nodes.archivedAt', 'nodes.externalId', 'nodes.externalUrl');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTimeScheduleQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'name', 'entries.startsAt', 'entries.endsAt', 'entries.userId', 'entries.userEmail', 'organization.id', 'organization.createdAt', 'organization.updatedAt', 'organization.name', 'organization.urlKey', 'organization.periodUploadVolume', 'organization.gitLinkbackMessagesEnabled', 'organization.gitPublicLinkbackMessagesEnabled', 'organization.roadmapEnabled', 'organization.projectUpdatesReminderFrequency', 'organization.projectUpdateRemindersDay', 'organization.projectUpdateRemindersHour', 'organization.fiscalYearStartMonth', 'organization.samlEnabled', 'organization.scimEnabled', 'organization.allowedAuthServices', 'organization.previousUrlKeys', 'organization.releaseChannel', 'organization.slaDayCount', 'organization.userCount', 'organization.createdIssueCount', 'organization.archivedAt', 'organization.logoUrl', 'organization.gitBranchFormat', 'organization.samlSettings', 'organization.deletionRequestedAt', 'organization.trialEndsAt', 'organization.allowMembersToInvite', 'archivedAt', 'externalId', 'externalUrl', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTriageResponsibilitiesQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.action', 'nodes.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTriageResponsibilityQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'action', 'archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingUsersQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.name', 'nodes.displayName', 'nodes.email', 'nodes.inviteHash', 'nodes.guest', 'nodes.active', 'nodes.url', 'nodes.createdIssueCount', 'nodes.isMe', 'nodes.admin', 'nodes.archivedAt', 'nodes.avatarUrl', 'nodes.disableReason', 'nodes.calendarHash', 'nodes.description', 'nodes.statusEmoji', 'nodes.statusLabel', 'nodes.statusUntilAt', 'nodes.timezone', 'nodes.lastSeen');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingUserQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'name', 'displayName', 'email', 'inviteHash', 'guest', 'active', 'url', 'createdIssueCount', 'isMe', 'admin', 'archivedAt', 'avatarUrl', 'disableReason', 'calendarHash', 'description', 'statusEmoji', 'statusLabel', 'statusUntilAt', 'timezone', 'lastSeen');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingViewerQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'name', 'displayName', 'email', 'inviteHash', 'guest', 'active', 'url', 'createdIssueCount', 'isMe', 'admin', 'archivedAt', 'avatarUrl', 'disableReason', 'calendarHash', 'description', 'statusEmoji', 'statusLabel', 'statusUntilAt', 'timezone', 'lastSeen');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingUserSettingsQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'notificationPreferences', 'unsubscribedFrom', 'user.id', 'user.createdAt', 'user.updatedAt', 'user.name', 'user.displayName', 'user.email', 'user.inviteHash', 'user.guest', 'user.active', 'user.url', 'user.createdIssueCount', 'user.isMe', 'user.admin', 'user.archivedAt', 'user.avatarUrl', 'user.disableReason', 'user.calendarHash', 'user.description', 'user.statusEmoji', 'user.statusLabel', 'user.statusUntilAt', 'user.timezone', 'user.lastSeen', 'subscribedToChangelog', 'subscribedToDPA', 'subscribedToInviteAccepted', 'subscribedToPrivacyLegalUpdates', 'subscribedToUnreadNotificationsReminder', 'showFullUserNames', 'archivedAt', 'calendarHash');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingWebhooksQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.enabled', 'nodes.allPublicTeams', 'nodes.resourceTypes', 'nodes.archivedAt', 'nodes.label', 'nodes.url', 'nodes.secret');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingWebhookQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'enabled', 'allPublicTeams', 'resourceTypes', 'archivedAt', 'label', 'url', 'secret');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingWorkflowStatesQueryRequest::get(), 0, '*', 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.name', 'nodes.color', 'nodes.position', 'nodes.type', 'nodes.archivedAt', 'nodes.description');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingWorkflowStateQueryRequest::get(), 0, '*', 'id', 'createdAt', 'updatedAt', 'name', 'color', 'position', 'type', 'team.id', 'team.createdAt', 'team.updatedAt', 'team.name', 'team.key', 'team.cyclesEnabled', 'team.cycleStartDay', 'team.cycleDuration', 'team.cycleCooldownTime', 'team.cycleIssueAutoAssignStarted', 'team.cycleIssueAutoAssignCompleted', 'team.cycleLockToActive', 'team.upcomingCycleCount', 'team.timezone', 'team.inviteHash', 'team.issueEstimationType', 'team.issueOrderingNoPriorityFirst', 'team.issueEstimationAllowZero', 'team.setIssueSortOrderOnStateChange', 'team.issueEstimationExtended', 'team.defaultIssueEstimate', 'team.triageEnabled', 'team.requirePriorityToLeaveTriage', 'team.private', 'team.groupIssueHistory', 'team.slackNewIssue', 'team.slackIssueComments', 'team.slackIssueStatuses', 'team.autoArchivePeriod', 'team.cycleCalenderUrl', 'team.issueCount', 'team.issueSortOrderDefaultToBottom', 'team.archivedAt', 'team.description', 'team.icon', 'team.color', 'team.defaultTemplateForMembersId', 'team.defaultTemplateForNonMembersId', 'team.autoClosePeriod', 'team.autoCloseStateId', 'team.joinByDefault', 'archivedAt', 'description');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingApiKeyCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'apiKey.id', 'apiKey.createdAt', 'apiKey.updatedAt', 'apiKey.label', 'apiKey.archivedAt', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingApiKeyDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingAttachmentCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'attachment.id', 'attachment.createdAt', 'attachment.updatedAt', 'attachment.title', 'attachment.url', 'attachment.metadata', 'attachment.groupBySource', 'attachment.archivedAt', 'attachment.subtitle', 'attachment.source', 'attachment.sourceType', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingAttachmentUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'attachment.id', 'attachment.createdAt', 'attachment.updatedAt', 'attachment.title', 'attachment.url', 'attachment.metadata', 'attachment.groupBySource', 'attachment.archivedAt', 'attachment.subtitle', 'attachment.source', 'attachment.sourceType', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingAttachmentUnsyncSlackMutationRequest::get(), 0, '*', 'lastSyncId', 'attachment.id', 'attachment.createdAt', 'attachment.updatedAt', 'attachment.title', 'attachment.url', 'attachment.metadata', 'attachment.groupBySource', 'attachment.archivedAt', 'attachment.subtitle', 'attachment.source', 'attachment.sourceType', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingAttachmentLinkURLMutationRequest::get(), 0, '*', 'lastSyncId', 'attachment.id', 'attachment.createdAt', 'attachment.updatedAt', 'attachment.title', 'attachment.url', 'attachment.metadata', 'attachment.groupBySource', 'attachment.archivedAt', 'attachment.subtitle', 'attachment.source', 'attachment.sourceType', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingAttachmentLinkGitLabMRMutationRequest::get(), 0, '*', 'lastSyncId', 'attachment.id', 'attachment.createdAt', 'attachment.updatedAt', 'attachment.title', 'attachment.url', 'attachment.metadata', 'attachment.groupBySource', 'attachment.archivedAt', 'attachment.subtitle', 'attachment.source', 'attachment.sourceType', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingAttachmentLinkGitHubIssueMutationRequest::get(), 0, '*', 'lastSyncId', 'attachment.id', 'attachment.createdAt', 'attachment.updatedAt', 'attachment.title', 'attachment.url', 'attachment.metadata', 'attachment.groupBySource', 'attachment.archivedAt', 'attachment.subtitle', 'attachment.source', 'attachment.sourceType', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingAttachmentLinkGitHubPRMutationRequest::get(), 0, '*', 'lastSyncId', 'attachment.id', 'attachment.createdAt', 'attachment.updatedAt', 'attachment.title', 'attachment.url', 'attachment.metadata', 'attachment.groupBySource', 'attachment.archivedAt', 'attachment.subtitle', 'attachment.source', 'attachment.sourceType', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingAttachmentLinkZendeskMutationRequest::get(), 0, '*', 'lastSyncId', 'attachment.id', 'attachment.createdAt', 'attachment.updatedAt', 'attachment.title', 'attachment.url', 'attachment.metadata', 'attachment.groupBySource', 'attachment.archivedAt', 'attachment.subtitle', 'attachment.source', 'attachment.sourceType', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingAttachmentLinkDiscordMutationRequest::get(), 0, '*', 'lastSyncId', 'attachment.id', 'attachment.createdAt', 'attachment.updatedAt', 'attachment.title', 'attachment.url', 'attachment.metadata', 'attachment.groupBySource', 'attachment.archivedAt', 'attachment.subtitle', 'attachment.source', 'attachment.sourceType', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingAttachmentLinkSlackMutationRequest::get(), 0, '*', 'lastSyncId', 'attachment.id', 'attachment.createdAt', 'attachment.updatedAt', 'attachment.title', 'attachment.url', 'attachment.metadata', 'attachment.groupBySource', 'attachment.archivedAt', 'attachment.subtitle', 'attachment.source', 'attachment.sourceType', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingAttachmentLinkFrontMutationRequest::get(), 0, '*', 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingAttachmentLinkIntercomMutationRequest::get(), 0, '*', 'lastSyncId', 'attachment.id', 'attachment.createdAt', 'attachment.updatedAt', 'attachment.title', 'attachment.url', 'attachment.metadata', 'attachment.groupBySource', 'attachment.archivedAt', 'attachment.subtitle', 'attachment.source', 'attachment.sourceType', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingAttachmentLinkJiraIssueMutationRequest::get(), 0, '*', 'lastSyncId', 'attachment.id', 'attachment.createdAt', 'attachment.updatedAt', 'attachment.title', 'attachment.url', 'attachment.metadata', 'attachment.groupBySource', 'attachment.archivedAt', 'attachment.subtitle', 'attachment.source', 'attachment.sourceType', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingAttachmentArchiveMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entity.id', 'entity.createdAt', 'entity.updatedAt', 'entity.title', 'entity.url', 'entity.metadata', 'entity.groupBySource', 'entity.archivedAt', 'entity.subtitle', 'entity.source', 'entity.sourceType');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingAttachmentDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingEmailUserAccountAuthChallengeMutationRequest::get(), 0, '*', 'success', 'authType');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingEmailTokenUserAccountAuthMutationRequest::get(), 0, '*', 'id', 'email', 'users.id', 'users.name', 'users.displayName', 'users.email', 'users.active', 'users.userAccountId', 'users.avatarUrl', 'allowDomainAccess', 'availableOrganizations.id', 'availableOrganizations.name', 'availableOrganizations.urlKey', 'availableOrganizations.previousUrlKeys', 'availableOrganizations.releaseChannel', 'availableOrganizations.samlEnabled', 'availableOrganizations.allowedAuthServices', 'availableOrganizations.scimEnabled', 'availableOrganizations.serviceId', 'availableOrganizations.userCount', 'availableOrganizations.logoUrl', 'availableOrganizations.deletionRequestedAt', 'availableOrganizations.samlSettings', 'lockedOrganizations.id', 'lockedOrganizations.name', 'lockedOrganizations.urlKey', 'lockedOrganizations.previousUrlKeys', 'lockedOrganizations.releaseChannel', 'lockedOrganizations.samlEnabled', 'lockedOrganizations.allowedAuthServices', 'lockedOrganizations.scimEnabled', 'lockedOrganizations.serviceId', 'lockedOrganizations.userCount', 'lockedOrganizations.logoUrl', 'lockedOrganizations.deletionRequestedAt', 'lockedOrganizations.samlSettings', 'lastUsedOrganizationId', 'token');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingSamlTokenUserAccountAuthMutationRequest::get(), 0, '*', 'id', 'email', 'users.id', 'users.name', 'users.displayName', 'users.email', 'users.active', 'users.userAccountId', 'users.avatarUrl', 'allowDomainAccess', 'availableOrganizations.id', 'availableOrganizations.name', 'availableOrganizations.urlKey', 'availableOrganizations.previousUrlKeys', 'availableOrganizations.releaseChannel', 'availableOrganizations.samlEnabled', 'availableOrganizations.allowedAuthServices', 'availableOrganizations.scimEnabled', 'availableOrganizations.serviceId', 'availableOrganizations.userCount', 'availableOrganizations.logoUrl', 'availableOrganizations.deletionRequestedAt', 'availableOrganizations.samlSettings', 'lockedOrganizations.id', 'lockedOrganizations.name', 'lockedOrganizations.urlKey', 'lockedOrganizations.previousUrlKeys', 'lockedOrganizations.releaseChannel', 'lockedOrganizations.samlEnabled', 'lockedOrganizations.allowedAuthServices', 'lockedOrganizations.scimEnabled', 'lockedOrganizations.serviceId', 'lockedOrganizations.userCount', 'lockedOrganizations.logoUrl', 'lockedOrganizations.deletionRequestedAt', 'lockedOrganizations.samlSettings', 'lastUsedOrganizationId', 'token');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingGoogleUserAccountAuthMutationRequest::get(), 0, '*', 'id', 'email', 'users.id', 'users.name', 'users.displayName', 'users.email', 'users.active', 'users.userAccountId', 'users.avatarUrl', 'allowDomainAccess', 'availableOrganizations.id', 'availableOrganizations.name', 'availableOrganizations.urlKey', 'availableOrganizations.previousUrlKeys', 'availableOrganizations.releaseChannel', 'availableOrganizations.samlEnabled', 'availableOrganizations.allowedAuthServices', 'availableOrganizations.scimEnabled', 'availableOrganizations.serviceId', 'availableOrganizations.userCount', 'availableOrganizations.logoUrl', 'availableOrganizations.deletionRequestedAt', 'availableOrganizations.samlSettings', 'lockedOrganizations.id', 'lockedOrganizations.name', 'lockedOrganizations.urlKey', 'lockedOrganizations.previousUrlKeys', 'lockedOrganizations.releaseChannel', 'lockedOrganizations.samlEnabled', 'lockedOrganizations.allowedAuthServices', 'lockedOrganizations.scimEnabled', 'lockedOrganizations.serviceId', 'lockedOrganizations.userCount', 'lockedOrganizations.logoUrl', 'lockedOrganizations.deletionRequestedAt', 'lockedOrganizations.samlSettings', 'lastUsedOrganizationId', 'token');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingCreateOrganizationFromOnboardingMutationRequest::get(), 0, '*', 'organization.id', 'organization.name', 'organization.urlKey', 'organization.previousUrlKeys', 'organization.releaseChannel', 'organization.samlEnabled', 'organization.allowedAuthServices', 'organization.scimEnabled', 'organization.serviceId', 'organization.userCount', 'organization.logoUrl', 'organization.deletionRequestedAt', 'organization.samlSettings', 'user.id', 'user.name', 'user.displayName', 'user.email', 'user.active', 'user.userAccountId', 'user.avatarUrl');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingJoinOrganizationFromOnboardingMutationRequest::get(), 0, '*', 'organization.id', 'organization.name', 'organization.urlKey', 'organization.previousUrlKeys', 'organization.releaseChannel', 'organization.samlEnabled', 'organization.allowedAuthServices', 'organization.scimEnabled', 'organization.serviceId', 'organization.userCount', 'organization.logoUrl', 'organization.deletionRequestedAt', 'organization.samlSettings', 'user.id', 'user.name', 'user.displayName', 'user.email', 'user.active', 'user.userAccountId', 'user.avatarUrl');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingLeaveOrganizationMutationRequest::get(), 0, '*', 'organization.id', 'organization.name', 'organization.urlKey', 'organization.previousUrlKeys', 'organization.releaseChannel', 'organization.samlEnabled', 'organization.allowedAuthServices', 'organization.scimEnabled', 'organization.serviceId', 'organization.userCount', 'organization.logoUrl', 'organization.deletionRequestedAt', 'organization.samlSettings', 'user.id', 'user.name', 'user.displayName', 'user.email', 'user.active', 'user.userAccountId', 'user.avatarUrl');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingLogoutMutationRequest::get(), 0, '*', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingLogoutSessionMutationRequest::get(), 0, '*', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingLogoutAllSessionsMutationRequest::get(), 0, '*', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingLogoutOtherSessionsMutationRequest::get(), 0, '*', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingCommentCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'comment.id', 'comment.createdAt', 'comment.updatedAt', 'comment.body', 'comment.bodyData', 'comment.reactionData', 'comment.url', 'comment.archivedAt', 'comment.resolvedAt', 'comment.editedAt', 'comment.quotedText', 'comment.summaryText', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingCommentUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'comment.id', 'comment.createdAt', 'comment.updatedAt', 'comment.body', 'comment.bodyData', 'comment.reactionData', 'comment.url', 'comment.archivedAt', 'comment.resolvedAt', 'comment.editedAt', 'comment.quotedText', 'comment.summaryText', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingCommentDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingCommentResolveMutationRequest::get(), 0, '*', 'lastSyncId', 'comment.id', 'comment.createdAt', 'comment.updatedAt', 'comment.body', 'comment.bodyData', 'comment.reactionData', 'comment.url', 'comment.archivedAt', 'comment.resolvedAt', 'comment.editedAt', 'comment.quotedText', 'comment.summaryText', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingCommentUnresolveMutationRequest::get(), 0, '*', 'lastSyncId', 'comment.id', 'comment.createdAt', 'comment.updatedAt', 'comment.body', 'comment.bodyData', 'comment.reactionData', 'comment.url', 'comment.archivedAt', 'comment.resolvedAt', 'comment.editedAt', 'comment.quotedText', 'comment.summaryText', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingContactCreateMutationRequest::get(), 0, '*', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingContactSalesCreateMutationRequest::get(), 0, '*', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingCustomViewCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'customView.id', 'customView.createdAt', 'customView.updatedAt', 'customView.name', 'customView.filters', 'customView.filterData', 'customView.shared', 'customView.modelName', 'customView.archivedAt', 'customView.description', 'customView.icon', 'customView.color', 'customView.projectFilterData', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingCustomViewUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'customView.id', 'customView.createdAt', 'customView.updatedAt', 'customView.name', 'customView.filters', 'customView.filterData', 'customView.shared', 'customView.modelName', 'customView.archivedAt', 'customView.description', 'customView.icon', 'customView.color', 'customView.projectFilterData', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingCustomViewDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingCycleCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'cycle.id', 'cycle.createdAt', 'cycle.updatedAt', 'cycle.number', 'cycle.startsAt', 'cycle.endsAt', 'cycle.issueCountHistory', 'cycle.completedIssueCountHistory', 'cycle.scopeHistory', 'cycle.completedScopeHistory', 'cycle.inProgressScopeHistory', 'cycle.progress', 'cycle.archivedAt', 'cycle.name', 'cycle.description', 'cycle.completedAt', 'cycle.autoArchivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingCycleUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'cycle.id', 'cycle.createdAt', 'cycle.updatedAt', 'cycle.number', 'cycle.startsAt', 'cycle.endsAt', 'cycle.issueCountHistory', 'cycle.completedIssueCountHistory', 'cycle.scopeHistory', 'cycle.completedScopeHistory', 'cycle.inProgressScopeHistory', 'cycle.progress', 'cycle.archivedAt', 'cycle.name', 'cycle.description', 'cycle.completedAt', 'cycle.autoArchivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingCycleArchiveMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entity.id', 'entity.createdAt', 'entity.updatedAt', 'entity.number', 'entity.startsAt', 'entity.endsAt', 'entity.issueCountHistory', 'entity.completedIssueCountHistory', 'entity.scopeHistory', 'entity.completedScopeHistory', 'entity.inProgressScopeHistory', 'entity.progress', 'entity.archivedAt', 'entity.name', 'entity.description', 'entity.completedAt', 'entity.autoArchivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingCycleShiftAllMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'cycle.id', 'cycle.createdAt', 'cycle.updatedAt', 'cycle.number', 'cycle.startsAt', 'cycle.endsAt', 'cycle.issueCountHistory', 'cycle.completedIssueCountHistory', 'cycle.scopeHistory', 'cycle.completedScopeHistory', 'cycle.inProgressScopeHistory', 'cycle.progress', 'cycle.archivedAt', 'cycle.name', 'cycle.description', 'cycle.completedAt', 'cycle.autoArchivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingDocumentCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'document.id', 'document.createdAt', 'document.updatedAt', 'document.title', 'document.slugId', 'document.sortOrder', 'document.archivedAt', 'document.icon', 'document.color', 'document.content', 'document.contentState', 'document.contentData', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingDocumentUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'document.id', 'document.createdAt', 'document.updatedAt', 'document.title', 'document.slugId', 'document.sortOrder', 'document.archivedAt', 'document.icon', 'document.color', 'document.content', 'document.contentState', 'document.contentData', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingDocumentDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingEmailIntakeAddressCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'emailIntakeAddress.id', 'emailIntakeAddress.createdAt', 'emailIntakeAddress.updatedAt', 'emailIntakeAddress.address', 'emailIntakeAddress.enabled', 'emailIntakeAddress.archivedAt', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingEmailIntakeAddressRotateMutationRequest::get(), 0, '*', 'lastSyncId', 'emailIntakeAddress.id', 'emailIntakeAddress.createdAt', 'emailIntakeAddress.updatedAt', 'emailIntakeAddress.address', 'emailIntakeAddress.enabled', 'emailIntakeAddress.archivedAt', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingEmailIntakeAddressUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'emailIntakeAddress.id', 'emailIntakeAddress.createdAt', 'emailIntakeAddress.updatedAt', 'emailIntakeAddress.address', 'emailIntakeAddress.enabled', 'emailIntakeAddress.archivedAt', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingEmailIntakeAddressDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingEmailUnsubscribeMutationRequest::get(), 0, '*', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingEmojiCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'emoji.id', 'emoji.createdAt', 'emoji.updatedAt', 'emoji.name', 'emoji.url', 'emoji.source', 'emoji.archivedAt', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingEmojiDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingInitiativeToProjectCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'initiativeToProject.id', 'initiativeToProject.createdAt', 'initiativeToProject.updatedAt', 'initiativeToProject.sortOrder', 'initiativeToProject.archivedAt', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingInitiativeToProjectUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'initiativeToProject.id', 'initiativeToProject.createdAt', 'initiativeToProject.updatedAt', 'initiativeToProject.sortOrder', 'initiativeToProject.archivedAt', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingInitiativeToProjectDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingInitiativeCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'initiative.id', 'initiative.createdAt', 'initiative.updatedAt', 'initiative.name', 'initiative.slugId', 'initiative.sortOrder', 'initiative.archivedAt', 'initiative.description', 'initiative.color', 'initiative.targetDate', 'initiative.targetDateResolution', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingInitiativeUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'initiative.id', 'initiative.createdAt', 'initiative.updatedAt', 'initiative.name', 'initiative.slugId', 'initiative.sortOrder', 'initiative.archivedAt', 'initiative.description', 'initiative.color', 'initiative.targetDate', 'initiative.targetDateResolution', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingInitiativeArchiveMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entity.id', 'entity.createdAt', 'entity.updatedAt', 'entity.name', 'entity.slugId', 'entity.sortOrder', 'entity.archivedAt', 'entity.description', 'entity.color', 'entity.targetDate', 'entity.targetDateResolution');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingInitiativeUnarchiveMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entity.id', 'entity.createdAt', 'entity.updatedAt', 'entity.name', 'entity.slugId', 'entity.sortOrder', 'entity.archivedAt', 'entity.description', 'entity.color', 'entity.targetDate', 'entity.targetDateResolution');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingInitiativeDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingFavoriteCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'favorite.id', 'favorite.createdAt', 'favorite.updatedAt', 'favorite.type', 'favorite.sortOrder', 'favorite.archivedAt', 'favorite.folderName', 'favorite.projectTab', 'favorite.predefinedViewType', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingFavoriteUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'favorite.id', 'favorite.createdAt', 'favorite.updatedAt', 'favorite.type', 'favorite.sortOrder', 'favorite.archivedAt', 'favorite.folderName', 'favorite.projectTab', 'favorite.predefinedViewType', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingFavoriteDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingFileUploadMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'uploadFile.filename', 'uploadFile.contentType', 'uploadFile.size', 'uploadFile.uploadUrl', 'uploadFile.assetUrl', 'uploadFile.metaData');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingImportFileUploadMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'uploadFile.filename', 'uploadFile.contentType', 'uploadFile.size', 'uploadFile.uploadUrl', 'uploadFile.assetUrl', 'uploadFile.metaData');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingImageUploadFromUrlMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'url');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingGitAutomationStateCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'gitAutomationState.id', 'gitAutomationState.createdAt', 'gitAutomationState.updatedAt', 'gitAutomationState.event', 'gitAutomationState.archivedAt', 'gitAutomationState.branchPattern', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingGitAutomationStateUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'gitAutomationState.id', 'gitAutomationState.createdAt', 'gitAutomationState.updatedAt', 'gitAutomationState.event', 'gitAutomationState.archivedAt', 'gitAutomationState.branchPattern', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingGitAutomationStateDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingGitAutomationTargetBranchCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'targetBranch.id', 'targetBranch.createdAt', 'targetBranch.updatedAt', 'targetBranch.branchPattern', 'targetBranch.isRegex', 'targetBranch.archivedAt', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingGitAutomationTargetBranchUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'targetBranch.id', 'targetBranch.createdAt', 'targetBranch.updatedAt', 'targetBranch.branchPattern', 'targetBranch.isRegex', 'targetBranch.archivedAt', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingGitAutomationTargetBranchDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationRequestMutationRequest::get(), 0, '*', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationSettingsUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationGithubCommitCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'webhookSecret', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationGithubConnectMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationGitlabConnectMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingAirbyteIntegrationConnectMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationGoogleCalendarPersonalConnectMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingJiraIntegrationConnectMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationJiraUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationJiraPersonalMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationGitHubPersonalMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationIntercomMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationIntercomDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationIntercomSettingsUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationDiscordMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationOpsgenieConnectMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationOpsgenieRefreshScheduleMappingsMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationPagerDutyConnectMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationPagerDutyRefreshScheduleMappingsMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationUpdateSlackMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationSlackMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationSlackAsksMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationSlackPersonalMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationAsksConnectChannelMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'mapping.id', 'mapping.name', 'mapping.isPrivate', 'mapping.isShared', 'mapping.botAdded', 'mapping.autoCreateOnMessage', 'mapping.autoCreateOnEmoji', 'mapping.autoCreateOnBotMention', 'mapping.autoCreateTemplateId', 'addBot', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationSlackPostMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'addBot', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt', 'nudgeToConnectMainSlackIntegration', 'nudgeToUpdateMainSlackIntegration');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationSlackProjectPostMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'addBot', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt', 'nudgeToConnectMainSlackIntegration', 'nudgeToUpdateMainSlackIntegration');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationSlackOrgProjectUpdatesPostMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'addBot', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt', 'nudgeToConnectMainSlackIntegration', 'nudgeToUpdateMainSlackIntegration');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationSlackImportEmojisMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationFigmaMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationGoogleSheetsMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingRefreshGoogleSheetsDataMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationSentryConnectMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationFrontMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationZendeskMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationLoomMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'integration.id', 'integration.createdAt', 'integration.updatedAt', 'integration.service', 'integration.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationArchiveMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationsSettingsCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'integrationsSettings.id', 'integrationsSettings.createdAt', 'integrationsSettings.updatedAt', 'integrationsSettings.archivedAt', 'integrationsSettings.slackIssueCreated', 'integrationsSettings.slackIssueNewComment', 'integrationsSettings.slackIssueStatusChangedDone', 'integrationsSettings.slackIssueStatusChangedAll', 'integrationsSettings.slackProjectUpdateCreated', 'integrationsSettings.slackProjectUpdateCreatedToTeam', 'integrationsSettings.slackProjectUpdateCreatedToWorkspace', 'integrationsSettings.slackIssueAddedToTriage', 'integrationsSettings.slackIssueSlaHighRisk', 'integrationsSettings.slackIssueSlaBreached', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationsSettingsUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'integrationsSettings.id', 'integrationsSettings.createdAt', 'integrationsSettings.updatedAt', 'integrationsSettings.archivedAt', 'integrationsSettings.slackIssueCreated', 'integrationsSettings.slackIssueNewComment', 'integrationsSettings.slackIssueStatusChangedDone', 'integrationsSettings.slackIssueStatusChangedAll', 'integrationsSettings.slackProjectUpdateCreated', 'integrationsSettings.slackProjectUpdateCreatedToTeam', 'integrationsSettings.slackProjectUpdateCreatedToWorkspace', 'integrationsSettings.slackIssueAddedToTriage', 'integrationsSettings.slackIssueSlaHighRisk', 'integrationsSettings.slackIssueSlaBreached', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationTemplateCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'integrationTemplate.id', 'integrationTemplate.createdAt', 'integrationTemplate.updatedAt', 'integrationTemplate.archivedAt', 'integrationTemplate.foreignEntityId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIntegrationTemplateDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueImportCreateGithubMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'issueImport.id', 'issueImport.createdAt', 'issueImport.updatedAt', 'issueImport.creatorId', 'issueImport.service', 'issueImport.status', 'issueImport.archivedAt', 'issueImport.teamName', 'issueImport.mapping', 'issueImport.error', 'issueImport.progress', 'issueImport.csvFileUrl', 'issueImport.errorMetadata');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueImportCreateJiraMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'issueImport.id', 'issueImport.createdAt', 'issueImport.updatedAt', 'issueImport.creatorId', 'issueImport.service', 'issueImport.status', 'issueImport.archivedAt', 'issueImport.teamName', 'issueImport.mapping', 'issueImport.error', 'issueImport.progress', 'issueImport.csvFileUrl', 'issueImport.errorMetadata');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueImportCreateCSVJiraMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'issueImport.id', 'issueImport.createdAt', 'issueImport.updatedAt', 'issueImport.creatorId', 'issueImport.service', 'issueImport.status', 'issueImport.archivedAt', 'issueImport.teamName', 'issueImport.mapping', 'issueImport.error', 'issueImport.progress', 'issueImport.csvFileUrl', 'issueImport.errorMetadata');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueImportCreateClubhouseMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'issueImport.id', 'issueImport.createdAt', 'issueImport.updatedAt', 'issueImport.creatorId', 'issueImport.service', 'issueImport.status', 'issueImport.archivedAt', 'issueImport.teamName', 'issueImport.mapping', 'issueImport.error', 'issueImport.progress', 'issueImport.csvFileUrl', 'issueImport.errorMetadata');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueImportCreateAsanaMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'issueImport.id', 'issueImport.createdAt', 'issueImport.updatedAt', 'issueImport.creatorId', 'issueImport.service', 'issueImport.status', 'issueImport.archivedAt', 'issueImport.teamName', 'issueImport.mapping', 'issueImport.error', 'issueImport.progress', 'issueImport.csvFileUrl', 'issueImport.errorMetadata');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueImportDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'issueImport.id', 'issueImport.createdAt', 'issueImport.updatedAt', 'issueImport.creatorId', 'issueImport.service', 'issueImport.status', 'issueImport.archivedAt', 'issueImport.teamName', 'issueImport.mapping', 'issueImport.error', 'issueImport.progress', 'issueImport.csvFileUrl', 'issueImport.errorMetadata');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueImportProcessMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'issueImport.id', 'issueImport.createdAt', 'issueImport.updatedAt', 'issueImport.creatorId', 'issueImport.service', 'issueImport.status', 'issueImport.archivedAt', 'issueImport.teamName', 'issueImport.mapping', 'issueImport.error', 'issueImport.progress', 'issueImport.csvFileUrl', 'issueImport.errorMetadata');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueImportUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'issueImport.id', 'issueImport.createdAt', 'issueImport.updatedAt', 'issueImport.creatorId', 'issueImport.service', 'issueImport.status', 'issueImport.archivedAt', 'issueImport.teamName', 'issueImport.mapping', 'issueImport.error', 'issueImport.progress', 'issueImport.csvFileUrl', 'issueImport.errorMetadata');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueLabelCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'issueLabel.id', 'issueLabel.createdAt', 'issueLabel.updatedAt', 'issueLabel.name', 'issueLabel.color', 'issueLabel.isGroup', 'issueLabel.archivedAt', 'issueLabel.description', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueLabelUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'issueLabel.id', 'issueLabel.createdAt', 'issueLabel.updatedAt', 'issueLabel.name', 'issueLabel.color', 'issueLabel.isGroup', 'issueLabel.archivedAt', 'issueLabel.description', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueLabelDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueRelationCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'issueRelation.id', 'issueRelation.createdAt', 'issueRelation.updatedAt', 'issueRelation.type', 'issueRelation.archivedAt', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueRelationUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'issueRelation.id', 'issueRelation.createdAt', 'issueRelation.updatedAt', 'issueRelation.type', 'issueRelation.archivedAt', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueRelationDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'issue.id', 'issue.createdAt', 'issue.updatedAt', 'issue.number', 'issue.title', 'issue.priority', 'issue.boardOrder', 'issue.sortOrder', 'issue.labelIds', 'issue.previousIdentifiers', 'issue.priorityLabel', 'issue.identifier', 'issue.url', 'issue.branchName', 'issue.customerTicketCount', 'issue.archivedAt', 'issue.estimate', 'issue.startedAt', 'issue.completedAt', 'issue.startedTriageAt', 'issue.triagedAt', 'issue.canceledAt', 'issue.autoClosedAt', 'issue.autoArchivedAt', 'issue.dueDate', 'issue.slaStartedAt', 'issue.slaBreachesAt', 'issue.trashed', 'issue.snoozedUntilAt', 'issue.subIssueSortOrder', 'issue.integrationSourceType', 'issue.description', 'issue.descriptionData', 'issue.descriptionState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'issue.id', 'issue.createdAt', 'issue.updatedAt', 'issue.number', 'issue.title', 'issue.priority', 'issue.boardOrder', 'issue.sortOrder', 'issue.labelIds', 'issue.previousIdentifiers', 'issue.priorityLabel', 'issue.identifier', 'issue.url', 'issue.branchName', 'issue.customerTicketCount', 'issue.archivedAt', 'issue.estimate', 'issue.startedAt', 'issue.completedAt', 'issue.startedTriageAt', 'issue.triagedAt', 'issue.canceledAt', 'issue.autoClosedAt', 'issue.autoArchivedAt', 'issue.dueDate', 'issue.slaStartedAt', 'issue.slaBreachesAt', 'issue.trashed', 'issue.snoozedUntilAt', 'issue.subIssueSortOrder', 'issue.integrationSourceType', 'issue.description', 'issue.descriptionData', 'issue.descriptionState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueBatchUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'issues.id', 'issues.createdAt', 'issues.updatedAt', 'issues.number', 'issues.title', 'issues.priority', 'issues.boardOrder', 'issues.sortOrder', 'issues.labelIds', 'issues.previousIdentifiers', 'issues.priorityLabel', 'issues.identifier', 'issues.url', 'issues.branchName', 'issues.customerTicketCount', 'issues.archivedAt', 'issues.estimate', 'issues.startedAt', 'issues.completedAt', 'issues.startedTriageAt', 'issues.triagedAt', 'issues.canceledAt', 'issues.autoClosedAt', 'issues.autoArchivedAt', 'issues.dueDate', 'issues.slaStartedAt', 'issues.slaBreachesAt', 'issues.trashed', 'issues.snoozedUntilAt', 'issues.subIssueSortOrder', 'issues.integrationSourceType', 'issues.description', 'issues.descriptionData', 'issues.descriptionState', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueArchiveMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entity.id', 'entity.createdAt', 'entity.updatedAt', 'entity.number', 'entity.title', 'entity.priority', 'entity.boardOrder', 'entity.sortOrder', 'entity.labelIds', 'entity.previousIdentifiers', 'entity.priorityLabel', 'entity.identifier', 'entity.url', 'entity.branchName', 'entity.customerTicketCount', 'entity.archivedAt', 'entity.estimate', 'entity.startedAt', 'entity.completedAt', 'entity.startedTriageAt', 'entity.triagedAt', 'entity.canceledAt', 'entity.autoClosedAt', 'entity.autoArchivedAt', 'entity.dueDate', 'entity.slaStartedAt', 'entity.slaBreachesAt', 'entity.trashed', 'entity.snoozedUntilAt', 'entity.subIssueSortOrder', 'entity.integrationSourceType', 'entity.description', 'entity.descriptionData', 'entity.descriptionState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueUnarchiveMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entity.id', 'entity.createdAt', 'entity.updatedAt', 'entity.number', 'entity.title', 'entity.priority', 'entity.boardOrder', 'entity.sortOrder', 'entity.labelIds', 'entity.previousIdentifiers', 'entity.priorityLabel', 'entity.identifier', 'entity.url', 'entity.branchName', 'entity.customerTicketCount', 'entity.archivedAt', 'entity.estimate', 'entity.startedAt', 'entity.completedAt', 'entity.startedTriageAt', 'entity.triagedAt', 'entity.canceledAt', 'entity.autoClosedAt', 'entity.autoArchivedAt', 'entity.dueDate', 'entity.slaStartedAt', 'entity.slaBreachesAt', 'entity.trashed', 'entity.snoozedUntilAt', 'entity.subIssueSortOrder', 'entity.integrationSourceType', 'entity.description', 'entity.descriptionData', 'entity.descriptionState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entity.id', 'entity.createdAt', 'entity.updatedAt', 'entity.number', 'entity.title', 'entity.priority', 'entity.boardOrder', 'entity.sortOrder', 'entity.labelIds', 'entity.previousIdentifiers', 'entity.priorityLabel', 'entity.identifier', 'entity.url', 'entity.branchName', 'entity.customerTicketCount', 'entity.archivedAt', 'entity.estimate', 'entity.startedAt', 'entity.completedAt', 'entity.startedTriageAt', 'entity.triagedAt', 'entity.canceledAt', 'entity.autoClosedAt', 'entity.autoArchivedAt', 'entity.dueDate', 'entity.slaStartedAt', 'entity.slaBreachesAt', 'entity.trashed', 'entity.snoozedUntilAt', 'entity.subIssueSortOrder', 'entity.integrationSourceType', 'entity.description', 'entity.descriptionData', 'entity.descriptionState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueAddLabelMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'issue.id', 'issue.createdAt', 'issue.updatedAt', 'issue.number', 'issue.title', 'issue.priority', 'issue.boardOrder', 'issue.sortOrder', 'issue.labelIds', 'issue.previousIdentifiers', 'issue.priorityLabel', 'issue.identifier', 'issue.url', 'issue.branchName', 'issue.customerTicketCount', 'issue.archivedAt', 'issue.estimate', 'issue.startedAt', 'issue.completedAt', 'issue.startedTriageAt', 'issue.triagedAt', 'issue.canceledAt', 'issue.autoClosedAt', 'issue.autoArchivedAt', 'issue.dueDate', 'issue.slaStartedAt', 'issue.slaBreachesAt', 'issue.trashed', 'issue.snoozedUntilAt', 'issue.subIssueSortOrder', 'issue.integrationSourceType', 'issue.description', 'issue.descriptionData', 'issue.descriptionState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueRemoveLabelMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'issue.id', 'issue.createdAt', 'issue.updatedAt', 'issue.number', 'issue.title', 'issue.priority', 'issue.boardOrder', 'issue.sortOrder', 'issue.labelIds', 'issue.previousIdentifiers', 'issue.priorityLabel', 'issue.identifier', 'issue.url', 'issue.branchName', 'issue.customerTicketCount', 'issue.archivedAt', 'issue.estimate', 'issue.startedAt', 'issue.completedAt', 'issue.startedTriageAt', 'issue.triagedAt', 'issue.canceledAt', 'issue.autoClosedAt', 'issue.autoArchivedAt', 'issue.dueDate', 'issue.slaStartedAt', 'issue.slaBreachesAt', 'issue.trashed', 'issue.snoozedUntilAt', 'issue.subIssueSortOrder', 'issue.integrationSourceType', 'issue.description', 'issue.descriptionData', 'issue.descriptionState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueReminderMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'issue.id', 'issue.createdAt', 'issue.updatedAt', 'issue.number', 'issue.title', 'issue.priority', 'issue.boardOrder', 'issue.sortOrder', 'issue.labelIds', 'issue.previousIdentifiers', 'issue.priorityLabel', 'issue.identifier', 'issue.url', 'issue.branchName', 'issue.customerTicketCount', 'issue.archivedAt', 'issue.estimate', 'issue.startedAt', 'issue.completedAt', 'issue.startedTriageAt', 'issue.triagedAt', 'issue.canceledAt', 'issue.autoClosedAt', 'issue.autoArchivedAt', 'issue.dueDate', 'issue.slaStartedAt', 'issue.slaBreachesAt', 'issue.trashed', 'issue.snoozedUntilAt', 'issue.subIssueSortOrder', 'issue.integrationSourceType', 'issue.description', 'issue.descriptionData', 'issue.descriptionState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueSubscribeMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'issue.id', 'issue.createdAt', 'issue.updatedAt', 'issue.number', 'issue.title', 'issue.priority', 'issue.boardOrder', 'issue.sortOrder', 'issue.labelIds', 'issue.previousIdentifiers', 'issue.priorityLabel', 'issue.identifier', 'issue.url', 'issue.branchName', 'issue.customerTicketCount', 'issue.archivedAt', 'issue.estimate', 'issue.startedAt', 'issue.completedAt', 'issue.startedTriageAt', 'issue.triagedAt', 'issue.canceledAt', 'issue.autoClosedAt', 'issue.autoArchivedAt', 'issue.dueDate', 'issue.slaStartedAt', 'issue.slaBreachesAt', 'issue.trashed', 'issue.snoozedUntilAt', 'issue.subIssueSortOrder', 'issue.integrationSourceType', 'issue.description', 'issue.descriptionData', 'issue.descriptionState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueUnsubscribeMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'issue.id', 'issue.createdAt', 'issue.updatedAt', 'issue.number', 'issue.title', 'issue.priority', 'issue.boardOrder', 'issue.sortOrder', 'issue.labelIds', 'issue.previousIdentifiers', 'issue.priorityLabel', 'issue.identifier', 'issue.url', 'issue.branchName', 'issue.customerTicketCount', 'issue.archivedAt', 'issue.estimate', 'issue.startedAt', 'issue.completedAt', 'issue.startedTriageAt', 'issue.triagedAt', 'issue.canceledAt', 'issue.autoClosedAt', 'issue.autoArchivedAt', 'issue.dueDate', 'issue.slaStartedAt', 'issue.slaBreachesAt', 'issue.trashed', 'issue.snoozedUntilAt', 'issue.subIssueSortOrder', 'issue.integrationSourceType', 'issue.description', 'issue.descriptionData', 'issue.descriptionState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingIssueDescriptionUpdateFromFrontMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'issue.id', 'issue.createdAt', 'issue.updatedAt', 'issue.number', 'issue.title', 'issue.priority', 'issue.boardOrder', 'issue.sortOrder', 'issue.labelIds', 'issue.previousIdentifiers', 'issue.priorityLabel', 'issue.identifier', 'issue.url', 'issue.branchName', 'issue.customerTicketCount', 'issue.archivedAt', 'issue.estimate', 'issue.startedAt', 'issue.completedAt', 'issue.startedTriageAt', 'issue.triagedAt', 'issue.canceledAt', 'issue.autoClosedAt', 'issue.autoArchivedAt', 'issue.dueDate', 'issue.slaStartedAt', 'issue.slaBreachesAt', 'issue.trashed', 'issue.snoozedUntilAt', 'issue.subIssueSortOrder', 'issue.integrationSourceType', 'issue.description', 'issue.descriptionData', 'issue.descriptionState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingNotificationUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'notification', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingNotificationMarkReadAllMutationRequest::get(), 0, '*', 'lastSyncId', 'notifications', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingNotificationMarkUnreadAllMutationRequest::get(), 0, '*', 'lastSyncId', 'notifications', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingNotificationSnoozeAllMutationRequest::get(), 0, '*', 'lastSyncId', 'notifications', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingNotificationUnsnoozeAllMutationRequest::get(), 0, '*', 'lastSyncId', 'notifications', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingNotificationArchiveMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entity');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingNotificationArchiveAllMutationRequest::get(), 0, '*', 'lastSyncId', 'notifications', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingNotificationUnarchiveMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entity');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingNotificationSubscriptionCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'notificationSubscription', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingNotificationSubscriptionUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'notificationSubscription', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingNotificationSubscriptionDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingOrganizationDomainClaimMutationRequest::get(), 0, '*', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingOrganizationDomainVerifyMutationRequest::get(), 0, '*', 'lastSyncId', 'organizationDomain.id', 'organizationDomain.createdAt', 'organizationDomain.updatedAt', 'organizationDomain.name', 'organizationDomain.verified', 'organizationDomain.authType', 'organizationDomain.archivedAt', 'organizationDomain.verificationEmail', 'organizationDomain.claimed', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingOrganizationDomainCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'organizationDomain.id', 'organizationDomain.createdAt', 'organizationDomain.updatedAt', 'organizationDomain.name', 'organizationDomain.verified', 'organizationDomain.authType', 'organizationDomain.archivedAt', 'organizationDomain.verificationEmail', 'organizationDomain.claimed', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingOrganizationDomainDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingOrganizationInviteCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'organizationInvite.id', 'organizationInvite.createdAt', 'organizationInvite.updatedAt', 'organizationInvite.email', 'organizationInvite.role', 'organizationInvite.external', 'organizationInvite.metadata', 'organizationInvite.archivedAt', 'organizationInvite.acceptedAt', 'organizationInvite.expiresAt', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingOrganizationInviteUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'organizationInvite.id', 'organizationInvite.createdAt', 'organizationInvite.updatedAt', 'organizationInvite.email', 'organizationInvite.role', 'organizationInvite.external', 'organizationInvite.metadata', 'organizationInvite.archivedAt', 'organizationInvite.acceptedAt', 'organizationInvite.expiresAt', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingResendOrganizationInviteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingOrganizationInviteDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingOrganizationUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'organization.id', 'organization.createdAt', 'organization.updatedAt', 'organization.name', 'organization.urlKey', 'organization.periodUploadVolume', 'organization.gitLinkbackMessagesEnabled', 'organization.gitPublicLinkbackMessagesEnabled', 'organization.roadmapEnabled', 'organization.projectUpdatesReminderFrequency', 'organization.projectUpdateRemindersDay', 'organization.projectUpdateRemindersHour', 'organization.fiscalYearStartMonth', 'organization.samlEnabled', 'organization.scimEnabled', 'organization.allowedAuthServices', 'organization.previousUrlKeys', 'organization.releaseChannel', 'organization.slaDayCount', 'organization.userCount', 'organization.createdIssueCount', 'organization.archivedAt', 'organization.logoUrl', 'organization.gitBranchFormat', 'organization.samlSettings', 'organization.deletionRequestedAt', 'organization.trialEndsAt', 'organization.allowMembersToInvite');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingOrganizationDeleteChallengeMutationRequest::get(), 0, '*', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingOrganizationDeleteMutationRequest::get(), 0, '*', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingOrganizationCancelDeleteMutationRequest::get(), 0, '*', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingOrganizationStartPlusTrialMutationRequest::get(), 0, '*', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingProjectLinkCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'projectLink.id', 'projectLink.createdAt', 'projectLink.updatedAt', 'projectLink.url', 'projectLink.label', 'projectLink.sortOrder', 'projectLink.archivedAt', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingProjectLinkUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'projectLink.id', 'projectLink.createdAt', 'projectLink.updatedAt', 'projectLink.url', 'projectLink.label', 'projectLink.sortOrder', 'projectLink.archivedAt', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingProjectLinkDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingProjectMilestoneCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'projectMilestone.id', 'projectMilestone.createdAt', 'projectMilestone.updatedAt', 'projectMilestone.name', 'projectMilestone.sortOrder', 'projectMilestone.archivedAt', 'projectMilestone.targetDate', 'projectMilestone.description', 'projectMilestone.descriptionData', 'projectMilestone.descriptionState', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingProjectMilestoneUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'projectMilestone.id', 'projectMilestone.createdAt', 'projectMilestone.updatedAt', 'projectMilestone.name', 'projectMilestone.sortOrder', 'projectMilestone.archivedAt', 'projectMilestone.targetDate', 'projectMilestone.description', 'projectMilestone.descriptionData', 'projectMilestone.descriptionState', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingProjectMilestoneDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingProjectCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'project.id', 'project.createdAt', 'project.updatedAt', 'project.name', 'project.description', 'project.slugId', 'project.color', 'project.sortOrder', 'project.issueCountHistory', 'project.completedIssueCountHistory', 'project.scopeHistory', 'project.completedScopeHistory', 'project.inProgressScopeHistory', 'project.slackNewIssue', 'project.slackIssueComments', 'project.slackIssueStatuses', 'project.url', 'project.progress', 'project.scope', 'project.state', 'project.archivedAt', 'project.icon', 'project.projectUpdateRemindersPausedUntilAt', 'project.startDate', 'project.startDateResolution', 'project.targetDate', 'project.targetDateResolution', 'project.startedAt', 'project.pausedAt', 'project.completedAt', 'project.canceledAt', 'project.autoArchivedAt', 'project.trashed', 'project.content', 'project.contentState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingProjectUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'project.id', 'project.createdAt', 'project.updatedAt', 'project.name', 'project.description', 'project.slugId', 'project.color', 'project.sortOrder', 'project.issueCountHistory', 'project.completedIssueCountHistory', 'project.scopeHistory', 'project.completedScopeHistory', 'project.inProgressScopeHistory', 'project.slackNewIssue', 'project.slackIssueComments', 'project.slackIssueStatuses', 'project.url', 'project.progress', 'project.scope', 'project.state', 'project.archivedAt', 'project.icon', 'project.projectUpdateRemindersPausedUntilAt', 'project.startDate', 'project.startDateResolution', 'project.targetDate', 'project.targetDateResolution', 'project.startedAt', 'project.pausedAt', 'project.completedAt', 'project.canceledAt', 'project.autoArchivedAt', 'project.trashed', 'project.content', 'project.contentState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingProjectDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entity.id', 'entity.createdAt', 'entity.updatedAt', 'entity.name', 'entity.description', 'entity.slugId', 'entity.color', 'entity.sortOrder', 'entity.issueCountHistory', 'entity.completedIssueCountHistory', 'entity.scopeHistory', 'entity.completedScopeHistory', 'entity.inProgressScopeHistory', 'entity.slackNewIssue', 'entity.slackIssueComments', 'entity.slackIssueStatuses', 'entity.url', 'entity.progress', 'entity.scope', 'entity.state', 'entity.archivedAt', 'entity.icon', 'entity.projectUpdateRemindersPausedUntilAt', 'entity.startDate', 'entity.startDateResolution', 'entity.targetDate', 'entity.targetDateResolution', 'entity.startedAt', 'entity.pausedAt', 'entity.completedAt', 'entity.canceledAt', 'entity.autoArchivedAt', 'entity.trashed', 'entity.content', 'entity.contentState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingProjectArchiveMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entity.id', 'entity.createdAt', 'entity.updatedAt', 'entity.name', 'entity.description', 'entity.slugId', 'entity.color', 'entity.sortOrder', 'entity.issueCountHistory', 'entity.completedIssueCountHistory', 'entity.scopeHistory', 'entity.completedScopeHistory', 'entity.inProgressScopeHistory', 'entity.slackNewIssue', 'entity.slackIssueComments', 'entity.slackIssueStatuses', 'entity.url', 'entity.progress', 'entity.scope', 'entity.state', 'entity.archivedAt', 'entity.icon', 'entity.projectUpdateRemindersPausedUntilAt', 'entity.startDate', 'entity.startDateResolution', 'entity.targetDate', 'entity.targetDateResolution', 'entity.startedAt', 'entity.pausedAt', 'entity.completedAt', 'entity.canceledAt', 'entity.autoArchivedAt', 'entity.trashed', 'entity.content', 'entity.contentState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingProjectUnarchiveMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entity.id', 'entity.createdAt', 'entity.updatedAt', 'entity.name', 'entity.description', 'entity.slugId', 'entity.color', 'entity.sortOrder', 'entity.issueCountHistory', 'entity.completedIssueCountHistory', 'entity.scopeHistory', 'entity.completedScopeHistory', 'entity.inProgressScopeHistory', 'entity.slackNewIssue', 'entity.slackIssueComments', 'entity.slackIssueStatuses', 'entity.url', 'entity.progress', 'entity.scope', 'entity.state', 'entity.archivedAt', 'entity.icon', 'entity.projectUpdateRemindersPausedUntilAt', 'entity.startDate', 'entity.startDateResolution', 'entity.targetDate', 'entity.targetDateResolution', 'entity.startedAt', 'entity.pausedAt', 'entity.completedAt', 'entity.canceledAt', 'entity.autoArchivedAt', 'entity.trashed', 'entity.content', 'entity.contentState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingProjectUpdateInteractionCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'projectUpdateInteraction.id', 'projectUpdateInteraction.createdAt', 'projectUpdateInteraction.updatedAt', 'projectUpdateInteraction.readAt', 'projectUpdateInteraction.archivedAt', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingProjectUpdateCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'projectUpdate.id', 'projectUpdate.createdAt', 'projectUpdate.updatedAt', 'projectUpdate.body', 'projectUpdate.health', 'projectUpdate.isDiffHidden', 'projectUpdate.bodyData', 'projectUpdate.url', 'projectUpdate.archivedAt', 'projectUpdate.editedAt', 'projectUpdate.infoSnapshot', 'projectUpdate.diff', 'projectUpdate.diffMarkdown', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingProjectUpdateUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'projectUpdate.id', 'projectUpdate.createdAt', 'projectUpdate.updatedAt', 'projectUpdate.body', 'projectUpdate.health', 'projectUpdate.isDiffHidden', 'projectUpdate.bodyData', 'projectUpdate.url', 'projectUpdate.archivedAt', 'projectUpdate.editedAt', 'projectUpdate.infoSnapshot', 'projectUpdate.diff', 'projectUpdate.diffMarkdown', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingProjectUpdateDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingProjectUpdateMarkAsReadMutationRequest::get(), 0, '*', 'lastSyncId', 'projectUpdate.id', 'projectUpdate.createdAt', 'projectUpdate.updatedAt', 'projectUpdate.body', 'projectUpdate.health', 'projectUpdate.isDiffHidden', 'projectUpdate.bodyData', 'projectUpdate.url', 'projectUpdate.archivedAt', 'projectUpdate.editedAt', 'projectUpdate.infoSnapshot', 'projectUpdate.diff', 'projectUpdate.diffMarkdown', 'success', 'interaction.id', 'interaction.createdAt', 'interaction.updatedAt', 'interaction.readAt', 'interaction.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingCreateProjectUpdateReminderMutationRequest::get(), 0, '*', 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingPushSubscriptionCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'entity.id', 'entity.createdAt', 'entity.updatedAt', 'entity.archivedAt', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingPushSubscriptionDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'entity.id', 'entity.createdAt', 'entity.updatedAt', 'entity.archivedAt', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingReactionCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'reaction.id', 'reaction.createdAt', 'reaction.updatedAt', 'reaction.emoji', 'reaction.archivedAt', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingReactionDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingCreateCsvExportReportMutationRequest::get(), 0, '*', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingRoadmapCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'roadmap.id', 'roadmap.createdAt', 'roadmap.updatedAt', 'roadmap.name', 'roadmap.slugId', 'roadmap.sortOrder', 'roadmap.archivedAt', 'roadmap.description', 'roadmap.color', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingRoadmapUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'roadmap.id', 'roadmap.createdAt', 'roadmap.updatedAt', 'roadmap.name', 'roadmap.slugId', 'roadmap.sortOrder', 'roadmap.archivedAt', 'roadmap.description', 'roadmap.color', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingRoadmapArchiveMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entity.id', 'entity.createdAt', 'entity.updatedAt', 'entity.name', 'entity.slugId', 'entity.sortOrder', 'entity.archivedAt', 'entity.description', 'entity.color');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingRoadmapUnarchiveMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entity.id', 'entity.createdAt', 'entity.updatedAt', 'entity.name', 'entity.slugId', 'entity.sortOrder', 'entity.archivedAt', 'entity.description', 'entity.color');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingRoadmapDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingRoadmapToProjectCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'roadmapToProject.id', 'roadmapToProject.createdAt', 'roadmapToProject.updatedAt', 'roadmapToProject.sortOrder', 'roadmapToProject.archivedAt', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingRoadmapToProjectUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'roadmapToProject.id', 'roadmapToProject.createdAt', 'roadmapToProject.updatedAt', 'roadmapToProject.sortOrder', 'roadmapToProject.archivedAt', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingRoadmapToProjectDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTeamKeyDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTeamMembershipCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'teamMembership.id', 'teamMembership.createdAt', 'teamMembership.updatedAt', 'teamMembership.sortOrder', 'teamMembership.archivedAt', 'teamMembership.owner');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTeamMembershipUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'teamMembership.id', 'teamMembership.createdAt', 'teamMembership.updatedAt', 'teamMembership.sortOrder', 'teamMembership.archivedAt', 'teamMembership.owner');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTeamMembershipDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTeamCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'team.id', 'team.createdAt', 'team.updatedAt', 'team.name', 'team.key', 'team.cyclesEnabled', 'team.cycleStartDay', 'team.cycleDuration', 'team.cycleCooldownTime', 'team.cycleIssueAutoAssignStarted', 'team.cycleIssueAutoAssignCompleted', 'team.cycleLockToActive', 'team.upcomingCycleCount', 'team.timezone', 'team.inviteHash', 'team.issueEstimationType', 'team.issueOrderingNoPriorityFirst', 'team.issueEstimationAllowZero', 'team.setIssueSortOrderOnStateChange', 'team.issueEstimationExtended', 'team.defaultIssueEstimate', 'team.triageEnabled', 'team.requirePriorityToLeaveTriage', 'team.private', 'team.groupIssueHistory', 'team.slackNewIssue', 'team.slackIssueComments', 'team.slackIssueStatuses', 'team.autoArchivePeriod', 'team.cycleCalenderUrl', 'team.issueCount', 'team.issueSortOrderDefaultToBottom', 'team.archivedAt', 'team.description', 'team.icon', 'team.color', 'team.defaultTemplateForMembersId', 'team.defaultTemplateForNonMembersId', 'team.autoClosePeriod', 'team.autoCloseStateId', 'team.joinByDefault');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTeamUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'team.id', 'team.createdAt', 'team.updatedAt', 'team.name', 'team.key', 'team.cyclesEnabled', 'team.cycleStartDay', 'team.cycleDuration', 'team.cycleCooldownTime', 'team.cycleIssueAutoAssignStarted', 'team.cycleIssueAutoAssignCompleted', 'team.cycleLockToActive', 'team.upcomingCycleCount', 'team.timezone', 'team.inviteHash', 'team.issueEstimationType', 'team.issueOrderingNoPriorityFirst', 'team.issueEstimationAllowZero', 'team.setIssueSortOrderOnStateChange', 'team.issueEstimationExtended', 'team.defaultIssueEstimate', 'team.triageEnabled', 'team.requirePriorityToLeaveTriage', 'team.private', 'team.groupIssueHistory', 'team.slackNewIssue', 'team.slackIssueComments', 'team.slackIssueStatuses', 'team.autoArchivePeriod', 'team.cycleCalenderUrl', 'team.issueCount', 'team.issueSortOrderDefaultToBottom', 'team.archivedAt', 'team.description', 'team.icon', 'team.color', 'team.defaultTemplateForMembersId', 'team.defaultTemplateForNonMembersId', 'team.autoClosePeriod', 'team.autoCloseStateId', 'team.joinByDefault');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTeamDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTeamUnarchiveMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entity.id', 'entity.createdAt', 'entity.updatedAt', 'entity.name', 'entity.key', 'entity.cyclesEnabled', 'entity.cycleStartDay', 'entity.cycleDuration', 'entity.cycleCooldownTime', 'entity.cycleIssueAutoAssignStarted', 'entity.cycleIssueAutoAssignCompleted', 'entity.cycleLockToActive', 'entity.upcomingCycleCount', 'entity.timezone', 'entity.inviteHash', 'entity.issueEstimationType', 'entity.issueOrderingNoPriorityFirst', 'entity.issueEstimationAllowZero', 'entity.setIssueSortOrderOnStateChange', 'entity.issueEstimationExtended', 'entity.defaultIssueEstimate', 'entity.triageEnabled', 'entity.requirePriorityToLeaveTriage', 'entity.private', 'entity.groupIssueHistory', 'entity.slackNewIssue', 'entity.slackIssueComments', 'entity.slackIssueStatuses', 'entity.autoArchivePeriod', 'entity.cycleCalenderUrl', 'entity.issueCount', 'entity.issueSortOrderDefaultToBottom', 'entity.archivedAt', 'entity.description', 'entity.icon', 'entity.color', 'entity.defaultTemplateForMembersId', 'entity.defaultTemplateForNonMembersId', 'entity.autoClosePeriod', 'entity.autoCloseStateId', 'entity.joinByDefault');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTeamCyclesDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'team.id', 'team.createdAt', 'team.updatedAt', 'team.name', 'team.key', 'team.cyclesEnabled', 'team.cycleStartDay', 'team.cycleDuration', 'team.cycleCooldownTime', 'team.cycleIssueAutoAssignStarted', 'team.cycleIssueAutoAssignCompleted', 'team.cycleLockToActive', 'team.upcomingCycleCount', 'team.timezone', 'team.inviteHash', 'team.issueEstimationType', 'team.issueOrderingNoPriorityFirst', 'team.issueEstimationAllowZero', 'team.setIssueSortOrderOnStateChange', 'team.issueEstimationExtended', 'team.defaultIssueEstimate', 'team.triageEnabled', 'team.requirePriorityToLeaveTriage', 'team.private', 'team.groupIssueHistory', 'team.slackNewIssue', 'team.slackIssueComments', 'team.slackIssueStatuses', 'team.autoArchivePeriod', 'team.cycleCalenderUrl', 'team.issueCount', 'team.issueSortOrderDefaultToBottom', 'team.archivedAt', 'team.description', 'team.icon', 'team.color', 'team.defaultTemplateForMembersId', 'team.defaultTemplateForNonMembersId', 'team.autoClosePeriod', 'team.autoCloseStateId', 'team.joinByDefault');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTemplateCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'template.id', 'template.createdAt', 'template.updatedAt', 'template.type', 'template.name', 'template.templateData', 'template.archivedAt', 'template.description', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTemplateUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'template.id', 'template.createdAt', 'template.updatedAt', 'template.type', 'template.name', 'template.templateData', 'template.archivedAt', 'template.description', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTemplateDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTimeScheduleCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'timeSchedule.id', 'timeSchedule.createdAt', 'timeSchedule.updatedAt', 'timeSchedule.name', 'timeSchedule.archivedAt', 'timeSchedule.externalId', 'timeSchedule.externalUrl', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTimeScheduleUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'timeSchedule.id', 'timeSchedule.createdAt', 'timeSchedule.updatedAt', 'timeSchedule.name', 'timeSchedule.archivedAt', 'timeSchedule.externalId', 'timeSchedule.externalUrl', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTimeScheduleUpsertExternalMutationRequest::get(), 0, '*', 'lastSyncId', 'timeSchedule.id', 'timeSchedule.createdAt', 'timeSchedule.updatedAt', 'timeSchedule.name', 'timeSchedule.archivedAt', 'timeSchedule.externalId', 'timeSchedule.externalUrl', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTimeScheduleDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTimeScheduleRefreshIntegrationScheduleMutationRequest::get(), 0, '*', 'lastSyncId', 'timeSchedule.id', 'timeSchedule.createdAt', 'timeSchedule.updatedAt', 'timeSchedule.name', 'timeSchedule.archivedAt', 'timeSchedule.externalId', 'timeSchedule.externalUrl', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTriageResponsibilityCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'triageResponsibility.id', 'triageResponsibility.createdAt', 'triageResponsibility.updatedAt', 'triageResponsibility.action', 'triageResponsibility.archivedAt', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTriageResponsibilityUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'triageResponsibility.id', 'triageResponsibility.createdAt', 'triageResponsibility.updatedAt', 'triageResponsibility.action', 'triageResponsibility.archivedAt', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingTriageResponsibilityDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingUserUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'user.id', 'user.createdAt', 'user.updatedAt', 'user.name', 'user.displayName', 'user.email', 'user.inviteHash', 'user.guest', 'user.active', 'user.url', 'user.createdIssueCount', 'user.isMe', 'user.admin', 'user.archivedAt', 'user.avatarUrl', 'user.disableReason', 'user.calendarHash', 'user.description', 'user.statusEmoji', 'user.statusLabel', 'user.statusUntilAt', 'user.timezone', 'user.lastSeen');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingUserDiscordConnectMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'user.id', 'user.createdAt', 'user.updatedAt', 'user.name', 'user.displayName', 'user.email', 'user.inviteHash', 'user.guest', 'user.active', 'user.url', 'user.createdIssueCount', 'user.isMe', 'user.admin', 'user.archivedAt', 'user.avatarUrl', 'user.disableReason', 'user.calendarHash', 'user.description', 'user.statusEmoji', 'user.statusLabel', 'user.statusUntilAt', 'user.timezone', 'user.lastSeen');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingUserExternalUserDisconnectMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'user.id', 'user.createdAt', 'user.updatedAt', 'user.name', 'user.displayName', 'user.email', 'user.inviteHash', 'user.guest', 'user.active', 'user.url', 'user.createdIssueCount', 'user.isMe', 'user.admin', 'user.archivedAt', 'user.avatarUrl', 'user.disableReason', 'user.calendarHash', 'user.description', 'user.statusEmoji', 'user.statusLabel', 'user.statusUntilAt', 'user.timezone', 'user.lastSeen');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingUserPromoteAdminMutationRequest::get(), 0, '*', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingUserDemoteAdminMutationRequest::get(), 0, '*', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingUserPromoteMemberMutationRequest::get(), 0, '*', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingUserDemoteMemberMutationRequest::get(), 0, '*', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingUserSuspendMutationRequest::get(), 0, '*', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingUserUnsuspendMutationRequest::get(), 0, '*', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingUserSettingsUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'userSettings.id', 'userSettings.createdAt', 'userSettings.updatedAt', 'userSettings.notificationPreferences', 'userSettings.unsubscribedFrom', 'userSettings.subscribedToChangelog', 'userSettings.subscribedToDPA', 'userSettings.subscribedToInviteAccepted', 'userSettings.subscribedToPrivacyLegalUpdates', 'userSettings.subscribedToUnreadNotificationsReminder', 'userSettings.showFullUserNames', 'userSettings.archivedAt', 'userSettings.calendarHash', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingUserSettingsFlagIncrementMutationRequest::get(), 0, '*', 'lastSyncId', 'flag', 'value', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingUserSettingsFlagsResetMutationRequest::get(), 0, '*', 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingUserFlagUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'flag', 'value', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingViewPreferencesCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'viewPreferences.id', 'viewPreferences.createdAt', 'viewPreferences.updatedAt', 'viewPreferences.type', 'viewPreferences.viewType', 'viewPreferences.archivedAt', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingViewPreferencesUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'viewPreferences.id', 'viewPreferences.createdAt', 'viewPreferences.updatedAt', 'viewPreferences.type', 'viewPreferences.viewType', 'viewPreferences.archivedAt', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingViewPreferencesDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingWebhookCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'webhook.id', 'webhook.createdAt', 'webhook.updatedAt', 'webhook.enabled', 'webhook.allPublicTeams', 'webhook.resourceTypes', 'webhook.archivedAt', 'webhook.label', 'webhook.url', 'webhook.secret', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingWebhookUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'webhook.id', 'webhook.createdAt', 'webhook.updatedAt', 'webhook.enabled', 'webhook.allPublicTeams', 'webhook.resourceTypes', 'webhook.archivedAt', 'webhook.label', 'webhook.url', 'webhook.secret', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingWebhookDeleteMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingWorkflowStateCreateMutationRequest::get(), 0, '*', 'lastSyncId', 'workflowState.id', 'workflowState.createdAt', 'workflowState.updatedAt', 'workflowState.name', 'workflowState.color', 'workflowState.position', 'workflowState.type', 'workflowState.archivedAt', 'workflowState.description', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingWorkflowStateUpdateMutationRequest::get(), 0, '*', 'lastSyncId', 'workflowState.id', 'workflowState.createdAt', 'workflowState.updatedAt', 'workflowState.name', 'workflowState.color', 'workflowState.position', 'workflowState.type', 'workflowState.archivedAt', 'workflowState.description', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\PendingWorkflowStateArchiveMutationRequest::get(), 0, '*', 'lastSyncId', 'success', 'entity.id', 'entity.createdAt', 'entity.updatedAt', 'entity.name', 'entity.color', 'entity.position', 'entity.type', 'entity.archivedAt', 'entity.description');
