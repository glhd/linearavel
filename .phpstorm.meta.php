<?php

namespace PHPSTORM_META;

expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingApiKeysRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.label', 'nodes.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingApplicationInfoRequest::get(), 0, 'id', 'clientId', 'name', 'developer', 'developerUrl', 'description', 'imageUrl');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingApplicationInfoByIdsRequest::get(), 0, 'id', 'clientId', 'name', 'developer', 'developerUrl', 'description', 'imageUrl');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingApplicationInfoWithMembershipsByIdsRequest::get(), 0, 'name', 'scope', 'appId', 'clientId', 'webhooksEnabled', 'totalMembers', 'imageUrl');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingApplicationWithAuthorizationRequest::get(), 0, 'id', 'clientId', 'name', 'developer', 'developerUrl', 'isAuthorized', 'createdByLinear', 'webhooksEnabled', 'description', 'imageUrl', 'approvalErrorCode');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingAuthorizedApplicationsRequest::get(), 0, 'name', 'scope', 'appId', 'clientId', 'webhooksEnabled', 'imageUrl');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingWorkspaceAuthorizedApplicationsRequest::get(), 0, 'name', 'scope', 'appId', 'clientId', 'webhooksEnabled', 'totalMembers', 'imageUrl');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingAttachmentsRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.title', 'nodes.url', 'nodes.metadata', 'nodes.groupBySource', 'nodes.archivedAt', 'nodes.subtitle', 'nodes.source', 'nodes.sourceType');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingAttachmentRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'title', 'url', 'metadata', 'groupBySource', 'archivedAt', 'subtitle', 'source', 'sourceType');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingAttachmentsForURLRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.title', 'nodes.url', 'nodes.metadata', 'nodes.groupBySource', 'nodes.archivedAt', 'nodes.subtitle', 'nodes.source', 'nodes.sourceType');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingAttachmentIssueRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'number', 'title', 'priority', 'boardOrder', 'sortOrder', 'labelIds', 'previousIdentifiers', 'priorityLabel', 'identifier', 'url', 'branchName', 'customerTicketCount', 'archivedAt', 'estimate', 'startedAt', 'completedAt', 'startedTriageAt', 'triagedAt', 'canceledAt', 'autoClosedAt', 'autoArchivedAt', 'dueDate', 'slaStartedAt', 'slaBreachesAt', 'trashed', 'snoozedUntilAt', 'subIssueSortOrder', 'integrationSourceType', 'description', 'descriptionData', 'descriptionState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingAttachmentSourcesRequest::get(), 0, 'sources');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingAuditEntryTypesRequest::get(), 0, 'type', 'description');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingAuditEntriesRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.type', 'nodes.archivedAt', 'nodes.actorId', 'nodes.ip', 'nodes.countryCode', 'nodes.metadata', 'nodes.requestInformation');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingAvailableUsersRequest::get(), 0, 'id', 'email', 'allowDomainAccess', 'lastUsedOrganizationId', 'token');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingAuthenticationSessionsRequest::get(), 0, 'id', 'type', 'countryCodes', 'createdAt', 'updatedAt', 'name', 'isCurrentSession', 'ip', 'locationCountry', 'locationCountryCode', 'locationCity', 'userAgent', 'browserType', 'lastActiveAt', 'location', 'operatingSystem', 'client');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingSsoUrlFromEmailRequest::get(), 0, 'success', 'samlSsoUrl');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingCommentsRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.body', 'nodes.bodyData', 'nodes.reactionData', 'nodes.url', 'nodes.archivedAt', 'nodes.resolvedAt', 'nodes.editedAt', 'nodes.quotedText', 'nodes.summaryText');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingCommentRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'body', 'bodyData', 'reactionData', 'url', 'archivedAt', 'resolvedAt', 'editedAt', 'quotedText', 'summaryText');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingCustomViewsRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.name', 'nodes.filters', 'nodes.filterData', 'nodes.shared', 'nodes.modelName', 'nodes.archivedAt', 'nodes.description', 'nodes.icon', 'nodes.color', 'nodes.projectFilterData');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingCustomViewRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'name', 'filters', 'filterData', 'shared', 'modelName', 'archivedAt', 'description', 'icon', 'color', 'projectFilterData');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingCustomViewDetailsSuggestionRequest::get(), 0, 'name', 'description', 'icon');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingCustomViewHasSubscribersRequest::get(), 0, 'hasSubscribers');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingCyclesRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.number', 'nodes.startsAt', 'nodes.endsAt', 'nodes.issueCountHistory', 'nodes.completedIssueCountHistory', 'nodes.scopeHistory', 'nodes.completedScopeHistory', 'nodes.inProgressScopeHistory', 'nodes.progress', 'nodes.archivedAt', 'nodes.name', 'nodes.description', 'nodes.completedAt', 'nodes.autoArchivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingCycleRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'number', 'startsAt', 'endsAt', 'issueCountHistory', 'completedIssueCountHistory', 'scopeHistory', 'completedScopeHistory', 'inProgressScopeHistory', 'progress', 'archivedAt', 'name', 'description', 'completedAt', 'autoArchivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingDocumentContentHistoryRequest::get(), 0, 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingDocumentsRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.title', 'nodes.slugId', 'nodes.sortOrder', 'nodes.archivedAt', 'nodes.icon', 'nodes.color', 'nodes.content', 'nodes.contentState', 'nodes.contentData');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingDocumentRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'title', 'slugId', 'sortOrder', 'archivedAt', 'icon', 'color', 'content', 'contentState', 'contentData');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingEmojisRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.name', 'nodes.url', 'nodes.source', 'nodes.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingEmojiRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'name', 'url', 'source', 'archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingExternalUsersRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.name', 'nodes.displayName', 'nodes.archivedAt', 'nodes.email', 'nodes.avatarUrl', 'nodes.lastSeen');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingExternalUserRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'name', 'displayName', 'archivedAt', 'email', 'avatarUrl', 'lastSeen');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingInitiativeToProjectsRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.sortOrder', 'nodes.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingInitiativeToProjectRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'sortOrder', 'archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingInitiativesRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.name', 'nodes.slugId', 'nodes.sortOrder', 'nodes.archivedAt', 'nodes.description', 'nodes.color', 'nodes.targetDate', 'nodes.targetDateResolution');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingInitiativeRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'name', 'slugId', 'sortOrder', 'archivedAt', 'description', 'color', 'targetDate', 'targetDateResolution');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingFavoritesRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.type', 'nodes.sortOrder', 'nodes.archivedAt', 'nodes.folderName', 'nodes.projectTab', 'nodes.predefinedViewType');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingFavoriteRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'type', 'sortOrder', 'archivedAt', 'folderName', 'projectTab', 'predefinedViewType');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingIntegrationsRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.service', 'nodes.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingIntegrationRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'service', 'archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingIntegrationHasScopesRequest::get(), 0, 'hasAllScopes', 'missingScopes');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingProjectUpdatesRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.body', 'nodes.health', 'nodes.isDiffHidden', 'nodes.bodyData', 'nodes.url', 'nodes.archivedAt', 'nodes.editedAt', 'nodes.infoSnapshot', 'nodes.diff', 'nodes.diffMarkdown');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingIntegrationsSettingsRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'archivedAt', 'slackIssueCreated', 'slackIssueNewComment', 'slackIssueStatusChangedDone', 'slackIssueStatusChangedAll', 'slackProjectUpdateCreated', 'slackProjectUpdateCreatedToTeam', 'slackProjectUpdateCreatedToWorkspace', 'slackIssueAddedToTriage', 'slackIssueSlaHighRisk', 'slackIssueSlaBreached');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingIntegrationTemplatesRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.archivedAt', 'nodes.foreignEntityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingIntegrationTemplateRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'archivedAt', 'foreignEntityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingIssueImportFinishGithubOAuthRequest::get(), 0, 'token');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingIssueImportCheckCSVRequest::get(), 0, 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingIssueLabelsRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.name', 'nodes.color', 'nodes.isGroup', 'nodes.archivedAt', 'nodes.description');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingIssueLabelRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'name', 'color', 'isGroup', 'archivedAt', 'description');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingIssueRelationsRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.type', 'nodes.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingIssueRelationRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'type', 'archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingIssuesRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.number', 'nodes.title', 'nodes.priority', 'nodes.boardOrder', 'nodes.sortOrder', 'nodes.labelIds', 'nodes.previousIdentifiers', 'nodes.priorityLabel', 'nodes.identifier', 'nodes.url', 'nodes.branchName', 'nodes.customerTicketCount', 'nodes.archivedAt', 'nodes.estimate', 'nodes.startedAt', 'nodes.completedAt', 'nodes.startedTriageAt', 'nodes.triagedAt', 'nodes.canceledAt', 'nodes.autoClosedAt', 'nodes.autoArchivedAt', 'nodes.dueDate', 'nodes.slaStartedAt', 'nodes.slaBreachesAt', 'nodes.trashed', 'nodes.snoozedUntilAt', 'nodes.subIssueSortOrder', 'nodes.integrationSourceType', 'nodes.description', 'nodes.descriptionData', 'nodes.descriptionState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingIssueRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'number', 'title', 'priority', 'boardOrder', 'sortOrder', 'labelIds', 'previousIdentifiers', 'priorityLabel', 'identifier', 'url', 'branchName', 'customerTicketCount', 'archivedAt', 'estimate', 'startedAt', 'completedAt', 'startedTriageAt', 'triagedAt', 'canceledAt', 'autoClosedAt', 'autoArchivedAt', 'dueDate', 'slaStartedAt', 'slaBreachesAt', 'trashed', 'snoozedUntilAt', 'subIssueSortOrder', 'integrationSourceType', 'description', 'descriptionData', 'descriptionState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingIssueSearchRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.number', 'nodes.title', 'nodes.priority', 'nodes.boardOrder', 'nodes.sortOrder', 'nodes.labelIds', 'nodes.previousIdentifiers', 'nodes.priorityLabel', 'nodes.identifier', 'nodes.url', 'nodes.branchName', 'nodes.customerTicketCount', 'nodes.archivedAt', 'nodes.estimate', 'nodes.startedAt', 'nodes.completedAt', 'nodes.startedTriageAt', 'nodes.triagedAt', 'nodes.canceledAt', 'nodes.autoClosedAt', 'nodes.autoArchivedAt', 'nodes.dueDate', 'nodes.slaStartedAt', 'nodes.slaBreachesAt', 'nodes.trashed', 'nodes.snoozedUntilAt', 'nodes.subIssueSortOrder', 'nodes.integrationSourceType', 'nodes.description', 'nodes.descriptionData', 'nodes.descriptionState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingIssueVcsBranchSearchRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'number', 'title', 'priority', 'boardOrder', 'sortOrder', 'labelIds', 'previousIdentifiers', 'priorityLabel', 'identifier', 'url', 'branchName', 'customerTicketCount', 'archivedAt', 'estimate', 'startedAt', 'completedAt', 'startedTriageAt', 'triagedAt', 'canceledAt', 'autoClosedAt', 'autoArchivedAt', 'dueDate', 'slaStartedAt', 'slaBreachesAt', 'trashed', 'snoozedUntilAt', 'subIssueSortOrder', 'integrationSourceType', 'description', 'descriptionData', 'descriptionState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingIssueFigmaFileKeySearchRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.number', 'nodes.title', 'nodes.priority', 'nodes.boardOrder', 'nodes.sortOrder', 'nodes.labelIds', 'nodes.previousIdentifiers', 'nodes.priorityLabel', 'nodes.identifier', 'nodes.url', 'nodes.branchName', 'nodes.customerTicketCount', 'nodes.archivedAt', 'nodes.estimate', 'nodes.startedAt', 'nodes.completedAt', 'nodes.startedTriageAt', 'nodes.triagedAt', 'nodes.canceledAt', 'nodes.autoClosedAt', 'nodes.autoArchivedAt', 'nodes.dueDate', 'nodes.slaStartedAt', 'nodes.slaBreachesAt', 'nodes.trashed', 'nodes.snoozedUntilAt', 'nodes.subIssueSortOrder', 'nodes.integrationSourceType', 'nodes.description', 'nodes.descriptionData', 'nodes.descriptionState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingIssuePriorityValuesRequest::get(), 0, 'priority', 'label');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingIssueFilterSuggestionRequest::get(), 0, 'filter');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingNotificationsRequest::get(), 0, 'nodes');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingNotificationSubscriptionsRequest::get(), 0, 'nodes');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingOrganizationDomainClaimRequestRequest::get(), 0, 'verificationString');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingOrganizationInvitesRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.email', 'nodes.role', 'nodes.external', 'nodes.metadata', 'nodes.archivedAt', 'nodes.acceptedAt', 'nodes.expiresAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingOrganizationInviteRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'email', 'role', 'external', 'metadata', 'archivedAt', 'acceptedAt', 'expiresAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingOrganizationRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'name', 'urlKey', 'periodUploadVolume', 'gitLinkbackMessagesEnabled', 'gitPublicLinkbackMessagesEnabled', 'roadmapEnabled', 'projectUpdatesReminderFrequency', 'projectUpdateRemindersDay', 'projectUpdateRemindersHour', 'fiscalYearStartMonth', 'samlEnabled', 'scimEnabled', 'allowedAuthServices', 'previousUrlKeys', 'releaseChannel', 'slaDayCount', 'userCount', 'createdIssueCount', 'archivedAt', 'logoUrl', 'gitBranchFormat', 'samlSettings', 'deletionRequestedAt', 'trialEndsAt', 'allowMembersToInvite');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingOrganizationExistsRequest::get(), 0, 'success', 'exists');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingArchivedTeamsRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'name', 'key', 'cyclesEnabled', 'cycleStartDay', 'cycleDuration', 'cycleCooldownTime', 'cycleIssueAutoAssignStarted', 'cycleIssueAutoAssignCompleted', 'cycleLockToActive', 'upcomingCycleCount', 'timezone', 'inviteHash', 'issueEstimationType', 'issueOrderingNoPriorityFirst', 'issueEstimationAllowZero', 'setIssueSortOrderOnStateChange', 'issueEstimationExtended', 'defaultIssueEstimate', 'triageEnabled', 'requirePriorityToLeaveTriage', 'private', 'groupIssueHistory', 'slackNewIssue', 'slackIssueComments', 'slackIssueStatuses', 'autoArchivePeriod', 'cycleCalenderUrl', 'issueCount', 'issueSortOrderDefaultToBottom', 'archivedAt', 'description', 'icon', 'color', 'defaultTemplateForMembersId', 'defaultTemplateForNonMembersId', 'autoClosePeriod', 'autoCloseStateId', 'joinByDefault');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingProjectLinksRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.url', 'nodes.label', 'nodes.sortOrder', 'nodes.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingProjectLinkRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'url', 'label', 'sortOrder', 'archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingProjectMilestonesRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.name', 'nodes.sortOrder', 'nodes.archivedAt', 'nodes.targetDate', 'nodes.description', 'nodes.descriptionData', 'nodes.descriptionState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingProjectMilestoneRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'name', 'sortOrder', 'archivedAt', 'targetDate', 'description', 'descriptionData', 'descriptionState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingProjectsRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.name', 'nodes.description', 'nodes.slugId', 'nodes.color', 'nodes.sortOrder', 'nodes.issueCountHistory', 'nodes.completedIssueCountHistory', 'nodes.scopeHistory', 'nodes.completedScopeHistory', 'nodes.inProgressScopeHistory', 'nodes.slackNewIssue', 'nodes.slackIssueComments', 'nodes.slackIssueStatuses', 'nodes.url', 'nodes.progress', 'nodes.scope', 'nodes.state', 'nodes.archivedAt', 'nodes.icon', 'nodes.projectUpdateRemindersPausedUntilAt', 'nodes.startDate', 'nodes.startDateResolution', 'nodes.targetDate', 'nodes.targetDateResolution', 'nodes.startedAt', 'nodes.pausedAt', 'nodes.completedAt', 'nodes.canceledAt', 'nodes.autoArchivedAt', 'nodes.trashed', 'nodes.content', 'nodes.contentState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingProjectRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'name', 'description', 'slugId', 'color', 'sortOrder', 'issueCountHistory', 'completedIssueCountHistory', 'scopeHistory', 'completedScopeHistory', 'inProgressScopeHistory', 'slackNewIssue', 'slackIssueComments', 'slackIssueStatuses', 'url', 'progress', 'scope', 'state', 'archivedAt', 'icon', 'projectUpdateRemindersPausedUntilAt', 'startDate', 'startDateResolution', 'targetDate', 'targetDateResolution', 'startedAt', 'pausedAt', 'completedAt', 'canceledAt', 'autoArchivedAt', 'trashed', 'content', 'contentState');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingProjectFilterSuggestionRequest::get(), 0, 'filter');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingProjectUpdateInteractionsRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.readAt', 'nodes.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingProjectUpdateInteractionRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'readAt', 'archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingProjectUpdateRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'body', 'health', 'isDiffHidden', 'bodyData', 'url', 'archivedAt', 'editedAt', 'infoSnapshot', 'diff', 'diffMarkdown');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingPushSubscriptionTestRequest::get(), 0, 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingRateLimitStatusRequest::get(), 0, 'kind', 'identifier');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingRoadmapsRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.name', 'nodes.slugId', 'nodes.sortOrder', 'nodes.archivedAt', 'nodes.description', 'nodes.color');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingRoadmapRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'name', 'slugId', 'sortOrder', 'archivedAt', 'description', 'color');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingRoadmapToProjectsRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.sortOrder', 'nodes.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingRoadmapToProjectRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'sortOrder', 'archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingSearchDocumentsRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.title', 'nodes.slugId', 'nodes.sortOrder', 'nodes.metadata', 'nodes.archivedAt', 'nodes.icon', 'nodes.color', 'nodes.content', 'nodes.contentState', 'nodes.contentData', 'totalCount');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingSearchProjectsRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.name', 'nodes.description', 'nodes.slugId', 'nodes.color', 'nodes.sortOrder', 'nodes.issueCountHistory', 'nodes.completedIssueCountHistory', 'nodes.scopeHistory', 'nodes.completedScopeHistory', 'nodes.inProgressScopeHistory', 'nodes.slackNewIssue', 'nodes.slackIssueComments', 'nodes.slackIssueStatuses', 'nodes.url', 'nodes.progress', 'nodes.scope', 'nodes.state', 'nodes.metadata', 'nodes.archivedAt', 'nodes.icon', 'nodes.projectUpdateRemindersPausedUntilAt', 'nodes.startDate', 'nodes.startDateResolution', 'nodes.targetDate', 'nodes.targetDateResolution', 'nodes.startedAt', 'nodes.pausedAt', 'nodes.completedAt', 'nodes.canceledAt', 'nodes.autoArchivedAt', 'nodes.trashed', 'nodes.content', 'nodes.contentState', 'totalCount');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingSearchIssuesRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.number', 'nodes.title', 'nodes.priority', 'nodes.boardOrder', 'nodes.sortOrder', 'nodes.labelIds', 'nodes.previousIdentifiers', 'nodes.priorityLabel', 'nodes.identifier', 'nodes.url', 'nodes.branchName', 'nodes.customerTicketCount', 'nodes.metadata', 'nodes.archivedAt', 'nodes.estimate', 'nodes.startedAt', 'nodes.completedAt', 'nodes.startedTriageAt', 'nodes.triagedAt', 'nodes.canceledAt', 'nodes.autoClosedAt', 'nodes.autoArchivedAt', 'nodes.dueDate', 'nodes.slaStartedAt', 'nodes.slaBreachesAt', 'nodes.trashed', 'nodes.snoozedUntilAt', 'nodes.subIssueSortOrder', 'nodes.integrationSourceType', 'nodes.description', 'nodes.descriptionData', 'nodes.descriptionState', 'totalCount');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingTeamMembershipsRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.sortOrder', 'nodes.archivedAt', 'nodes.owner');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingTeamMembershipRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'sortOrder', 'archivedAt', 'owner');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingTeamsRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.name', 'nodes.key', 'nodes.cyclesEnabled', 'nodes.cycleStartDay', 'nodes.cycleDuration', 'nodes.cycleCooldownTime', 'nodes.cycleIssueAutoAssignStarted', 'nodes.cycleIssueAutoAssignCompleted', 'nodes.cycleLockToActive', 'nodes.upcomingCycleCount', 'nodes.timezone', 'nodes.inviteHash', 'nodes.issueEstimationType', 'nodes.issueOrderingNoPriorityFirst', 'nodes.issueEstimationAllowZero', 'nodes.setIssueSortOrderOnStateChange', 'nodes.issueEstimationExtended', 'nodes.defaultIssueEstimate', 'nodes.triageEnabled', 'nodes.requirePriorityToLeaveTriage', 'nodes.private', 'nodes.groupIssueHistory', 'nodes.slackNewIssue', 'nodes.slackIssueComments', 'nodes.slackIssueStatuses', 'nodes.autoArchivePeriod', 'nodes.cycleCalenderUrl', 'nodes.issueCount', 'nodes.issueSortOrderDefaultToBottom', 'nodes.archivedAt', 'nodes.description', 'nodes.icon', 'nodes.color', 'nodes.defaultTemplateForMembersId', 'nodes.defaultTemplateForNonMembersId', 'nodes.autoClosePeriod', 'nodes.autoCloseStateId', 'nodes.joinByDefault');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingAdministrableTeamsRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.name', 'nodes.key', 'nodes.cyclesEnabled', 'nodes.cycleStartDay', 'nodes.cycleDuration', 'nodes.cycleCooldownTime', 'nodes.cycleIssueAutoAssignStarted', 'nodes.cycleIssueAutoAssignCompleted', 'nodes.cycleLockToActive', 'nodes.upcomingCycleCount', 'nodes.timezone', 'nodes.inviteHash', 'nodes.issueEstimationType', 'nodes.issueOrderingNoPriorityFirst', 'nodes.issueEstimationAllowZero', 'nodes.setIssueSortOrderOnStateChange', 'nodes.issueEstimationExtended', 'nodes.defaultIssueEstimate', 'nodes.triageEnabled', 'nodes.requirePriorityToLeaveTriage', 'nodes.private', 'nodes.groupIssueHistory', 'nodes.slackNewIssue', 'nodes.slackIssueComments', 'nodes.slackIssueStatuses', 'nodes.autoArchivePeriod', 'nodes.cycleCalenderUrl', 'nodes.issueCount', 'nodes.issueSortOrderDefaultToBottom', 'nodes.archivedAt', 'nodes.description', 'nodes.icon', 'nodes.color', 'nodes.defaultTemplateForMembersId', 'nodes.defaultTemplateForNonMembersId', 'nodes.autoClosePeriod', 'nodes.autoCloseStateId', 'nodes.joinByDefault');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingTeamRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'name', 'key', 'cyclesEnabled', 'cycleStartDay', 'cycleDuration', 'cycleCooldownTime', 'cycleIssueAutoAssignStarted', 'cycleIssueAutoAssignCompleted', 'cycleLockToActive', 'upcomingCycleCount', 'timezone', 'inviteHash', 'issueEstimationType', 'issueOrderingNoPriorityFirst', 'issueEstimationAllowZero', 'setIssueSortOrderOnStateChange', 'issueEstimationExtended', 'defaultIssueEstimate', 'triageEnabled', 'requirePriorityToLeaveTriage', 'private', 'groupIssueHistory', 'slackNewIssue', 'slackIssueComments', 'slackIssueStatuses', 'autoArchivePeriod', 'cycleCalenderUrl', 'issueCount', 'issueSortOrderDefaultToBottom', 'archivedAt', 'description', 'icon', 'color', 'defaultTemplateForMembersId', 'defaultTemplateForNonMembersId', 'autoClosePeriod', 'autoCloseStateId', 'joinByDefault');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingTemplatesRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'type', 'name', 'templateData', 'archivedAt', 'description');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingTemplateRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'type', 'name', 'templateData', 'archivedAt', 'description');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingTemplatesForIntegrationRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'type', 'name', 'templateData', 'archivedAt', 'description');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingTimeSchedulesRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.name', 'nodes.archivedAt', 'nodes.externalId', 'nodes.externalUrl');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingTimeScheduleRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'name', 'archivedAt', 'externalId', 'externalUrl');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingTriageResponsibilitiesRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.action', 'nodes.archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingTriageResponsibilityRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'action', 'archivedAt');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingUsersRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.name', 'nodes.displayName', 'nodes.email', 'nodes.inviteHash', 'nodes.guest', 'nodes.active', 'nodes.url', 'nodes.createdIssueCount', 'nodes.isMe', 'nodes.admin', 'nodes.archivedAt', 'nodes.avatarUrl', 'nodes.disableReason', 'nodes.calendarHash', 'nodes.description', 'nodes.statusEmoji', 'nodes.statusLabel', 'nodes.statusUntilAt', 'nodes.timezone', 'nodes.lastSeen');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingUserRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'name', 'displayName', 'email', 'inviteHash', 'guest', 'active', 'url', 'createdIssueCount', 'isMe', 'admin', 'archivedAt', 'avatarUrl', 'disableReason', 'calendarHash', 'description', 'statusEmoji', 'statusLabel', 'statusUntilAt', 'timezone', 'lastSeen');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingViewerRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'name', 'displayName', 'email', 'inviteHash', 'guest', 'active', 'url', 'createdIssueCount', 'isMe', 'admin', 'archivedAt', 'avatarUrl', 'disableReason', 'calendarHash', 'description', 'statusEmoji', 'statusLabel', 'statusUntilAt', 'timezone', 'lastSeen');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingUserSettingsRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'notificationPreferences', 'unsubscribedFrom', 'subscribedToChangelog', 'subscribedToDPA', 'subscribedToInviteAccepted', 'subscribedToPrivacyLegalUpdates', 'subscribedToUnreadNotificationsReminder', 'showFullUserNames', 'archivedAt', 'calendarHash');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingWebhooksRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.enabled', 'nodes.allPublicTeams', 'nodes.resourceTypes', 'nodes.archivedAt', 'nodes.label', 'nodes.url', 'nodes.secret');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingWebhookRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'enabled', 'allPublicTeams', 'resourceTypes', 'archivedAt', 'label', 'url', 'secret');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingWorkflowStatesRequest::get(), 0, 'nodes.id', 'nodes.createdAt', 'nodes.updatedAt', 'nodes.name', 'nodes.color', 'nodes.position', 'nodes.type', 'nodes.archivedAt', 'nodes.description');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Queries\PendingWorkflowStateRequest::get(), 0, 'id', 'createdAt', 'updatedAt', 'name', 'color', 'position', 'type', 'archivedAt', 'description');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingApiKeyCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingApiKeyDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingAttachmentCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingAttachmentUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingAttachmentUnsyncSlackRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingAttachmentLinkURLRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingAttachmentLinkGitLabMRRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingAttachmentLinkGitHubIssueRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingAttachmentLinkGitHubPRRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingAttachmentLinkZendeskRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingAttachmentLinkDiscordRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingAttachmentLinkSlackRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingAttachmentLinkFrontRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingAttachmentLinkIntercomRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingAttachmentLinkJiraIssueRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingAttachmentArchiveRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingAttachmentDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingEmailUserAccountAuthChallengeRequest::get(), 0, 'success', 'authType');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingEmailTokenUserAccountAuthRequest::get(), 0, 'id', 'email', 'allowDomainAccess', 'lastUsedOrganizationId', 'token');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingSamlTokenUserAccountAuthRequest::get(), 0, 'id', 'email', 'allowDomainAccess', 'lastUsedOrganizationId', 'token');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingGoogleUserAccountAuthRequest::get(), 0, 'id', 'email', 'allowDomainAccess', 'lastUsedOrganizationId', 'token');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingLogoutRequest::get(), 0, 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingLogoutSessionRequest::get(), 0, 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingLogoutAllSessionsRequest::get(), 0, 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingLogoutOtherSessionsRequest::get(), 0, 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingCommentCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingCommentUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingCommentDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingCommentResolveRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingCommentUnresolveRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingContactCreateRequest::get(), 0, 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingContactSalesCreateRequest::get(), 0, 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingCustomViewCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingCustomViewUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingCustomViewDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingCycleCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingCycleUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingCycleArchiveRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingCycleShiftAllRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingDocumentCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingDocumentUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingDocumentDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingEmailIntakeAddressCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingEmailIntakeAddressRotateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingEmailIntakeAddressUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingEmailIntakeAddressDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingEmailUnsubscribeRequest::get(), 0, 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingEmojiCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingEmojiDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingInitiativeToProjectCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingInitiativeToProjectUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingInitiativeToProjectDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingInitiativeCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingInitiativeUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingInitiativeArchiveRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingInitiativeUnarchiveRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingInitiativeDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingFavoriteCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingFavoriteUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingFavoriteDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingFileUploadRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingImportFileUploadRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingImageUploadFromUrlRequest::get(), 0, 'lastSyncId', 'success', 'url');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingGitAutomationStateCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingGitAutomationStateUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingGitAutomationStateDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingGitAutomationTargetBranchCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingGitAutomationTargetBranchUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingGitAutomationTargetBranchDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationRequestRequest::get(), 0, 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationSettingsUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationGithubCommitCreateRequest::get(), 0, 'lastSyncId', 'success', 'webhookSecret');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationGithubConnectRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationGitlabConnectRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingAirbyteIntegrationConnectRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationGoogleCalendarPersonalConnectRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingJiraIntegrationConnectRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationJiraUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationJiraPersonalRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationGitHubPersonalRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationIntercomRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationIntercomDeleteRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationIntercomSettingsUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationDiscordRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationOpsgenieConnectRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationOpsgenieRefreshScheduleMappingsRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationPagerDutyConnectRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationPagerDutyRefreshScheduleMappingsRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationUpdateSlackRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationSlackRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationSlackAsksRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationSlackPersonalRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationAsksConnectChannelRequest::get(), 0, 'lastSyncId', 'success', 'addBot');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationSlackPostRequest::get(), 0, 'lastSyncId', 'success', 'addBot', 'nudgeToConnectMainSlackIntegration', 'nudgeToUpdateMainSlackIntegration');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationSlackProjectPostRequest::get(), 0, 'lastSyncId', 'success', 'addBot', 'nudgeToConnectMainSlackIntegration', 'nudgeToUpdateMainSlackIntegration');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationSlackOrgProjectUpdatesPostRequest::get(), 0, 'lastSyncId', 'success', 'addBot', 'nudgeToConnectMainSlackIntegration', 'nudgeToUpdateMainSlackIntegration');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationSlackImportEmojisRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationFigmaRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationGoogleSheetsRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingRefreshGoogleSheetsDataRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationSentryConnectRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationFrontRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationZendeskRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationLoomRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationArchiveRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationsSettingsCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationsSettingsUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationTemplateCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIntegrationTemplateDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIssueImportCreateGithubRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIssueImportCreateJiraRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIssueImportCreateCSVJiraRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIssueImportCreateClubhouseRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIssueImportCreateAsanaRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIssueImportDeleteRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIssueImportProcessRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIssueImportUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIssueLabelCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIssueLabelUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIssueLabelDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIssueRelationCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIssueRelationUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIssueRelationDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIssueCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIssueUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIssueBatchUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIssueArchiveRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIssueUnarchiveRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIssueDeleteRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIssueAddLabelRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIssueRemoveLabelRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIssueReminderRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIssueSubscribeRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIssueUnsubscribeRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingIssueDescriptionUpdateFromFrontRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingNotificationUpdateRequest::get(), 0, 'lastSyncId', 'notification', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingNotificationMarkReadAllRequest::get(), 0, 'lastSyncId', 'notifications', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingNotificationMarkUnreadAllRequest::get(), 0, 'lastSyncId', 'notifications', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingNotificationSnoozeAllRequest::get(), 0, 'lastSyncId', 'notifications', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingNotificationUnsnoozeAllRequest::get(), 0, 'lastSyncId', 'notifications', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingNotificationArchiveRequest::get(), 0, 'lastSyncId', 'success', 'entity');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingNotificationArchiveAllRequest::get(), 0, 'lastSyncId', 'notifications', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingNotificationUnarchiveRequest::get(), 0, 'lastSyncId', 'success', 'entity');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingNotificationSubscriptionCreateRequest::get(), 0, 'lastSyncId', 'notificationSubscription', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingNotificationSubscriptionUpdateRequest::get(), 0, 'lastSyncId', 'notificationSubscription', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingNotificationSubscriptionDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingOrganizationDomainClaimRequest::get(), 0, 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingOrganizationDomainVerifyRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingOrganizationDomainCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingOrganizationDomainDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingOrganizationInviteCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingOrganizationInviteUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingResendOrganizationInviteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingOrganizationInviteDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingOrganizationUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingOrganizationDeleteChallengeRequest::get(), 0, 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingOrganizationDeleteRequest::get(), 0, 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingOrganizationCancelDeleteRequest::get(), 0, 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingOrganizationStartPlusTrialRequest::get(), 0, 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingProjectLinkCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingProjectLinkUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingProjectLinkDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingProjectMilestoneCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingProjectMilestoneUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingProjectMilestoneDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingProjectCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingProjectUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingProjectDeleteRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingProjectArchiveRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingProjectUnarchiveRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingProjectUpdateInteractionCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingProjectUpdateCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingProjectUpdateUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingProjectUpdateDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingProjectUpdateMarkAsReadRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingCreateProjectUpdateReminderRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingPushSubscriptionCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingPushSubscriptionDeleteRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingReactionCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingReactionDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingCreateCsvExportReportRequest::get(), 0, 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingRoadmapCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingRoadmapUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingRoadmapArchiveRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingRoadmapUnarchiveRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingRoadmapDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingRoadmapToProjectCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingRoadmapToProjectUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingRoadmapToProjectDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingTeamKeyDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingTeamMembershipCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingTeamMembershipUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingTeamMembershipDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingTeamCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingTeamUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingTeamDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingTeamUnarchiveRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingTeamCyclesDeleteRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingTemplateCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingTemplateUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingTemplateDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingTimeScheduleCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingTimeScheduleUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingTimeScheduleUpsertExternalRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingTimeScheduleDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingTimeScheduleRefreshIntegrationScheduleRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingTriageResponsibilityCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingTriageResponsibilityUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingTriageResponsibilityDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingUserUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingUserDiscordConnectRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingUserExternalUserDisconnectRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingUserPromoteAdminRequest::get(), 0, 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingUserDemoteAdminRequest::get(), 0, 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingUserPromoteMemberRequest::get(), 0, 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingUserDemoteMemberRequest::get(), 0, 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingUserSuspendRequest::get(), 0, 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingUserUnsuspendRequest::get(), 0, 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingUserSettingsUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingUserSettingsFlagIncrementRequest::get(), 0, 'lastSyncId', 'flag', 'value', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingUserSettingsFlagsResetRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingUserFlagUpdateRequest::get(), 0, 'lastSyncId', 'flag', 'value', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingViewPreferencesCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingViewPreferencesUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingViewPreferencesDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingWebhookCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingWebhookUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingWebhookDeleteRequest::get(), 0, 'lastSyncId', 'success', 'entityId');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingWorkflowStateCreateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingWorkflowStateUpdateRequest::get(), 0, 'lastSyncId', 'success');
expectedArguments(\Glhd\Linearavel\Requests\Pending\Mutations\PendingWorkflowStateArchiveRequest::get(), 0, 'lastSyncId', 'success');
